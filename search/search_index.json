{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"VSD Fleet Management System","text":"<p>Enterprise-Grade Fleet Management Powered by ERPNext</p> <p>A comprehensive, open-source fleet management solution built on the Frappe framework, designed for transportation companies, logistics providers, and organizations managing vehicle fleets. Streamline operations from cargo registration to trip completion with integrated financial management and real-time tracking.</p> <p>\ud83d\udcdd Note: This is a community fork of the original VVSD-LTD/vsd_fleet_ms project, enhanced with comprehensive documentation and additional features based on real customer needs. The original project was built by VVSD-LTD after studying SAP's fleet management solutions, making it one of the most sophisticated fleet management applications in the ERPNext ecosystem.</p>"},{"location":"#system-overview","title":"\ud83d\udcf8 System Overview","text":"<p>The VSD Fleet Management System provides a comprehensive workspace for managing all aspects of fleet operations, from cargo registration to trip completion and financial settlement.</p>"},{"location":"#why-choose-vsd-fleet-ms","title":"\ud83d\ude80 Why Choose VSD Fleet MS?","text":""},{"location":"#complete-fleet-lifecycle-management","title":"Complete Fleet Lifecycle Management","text":"<ul> <li>Cargo Registration \u2192 Vehicle Assignment \u2192 Trip Execution \u2192 Financial Settlement</li> <li>End-to-end workflow automation with approval processes</li> <li>Multi-currency support (USD/TZS) with automatic exchange rate handling</li> <li>Integrated accounting with ERPNext Journal Entries and Purchase Orders</li> </ul>"},{"location":"#professional-features","title":"Professional Features","text":"<ul> <li>Real-time Trip Tracking with location updates and GPS integration</li> <li>Intelligent Vehicle Assignment with trailer management</li> <li>Automated Financial Workflows for fund and fuel approval</li> <li>Breakdown Management with trip reassignment capabilities</li> <li>Comprehensive Reporting with expense analysis and fuel tracking</li> </ul>"},{"location":"#enterprise-integration","title":"Enterprise Integration","text":"<ul> <li>ERPNext Native - Seamless integration with existing ERP systems</li> <li>Multi-Company Support - Manage multiple business entities</li> <li>Role-Based Access - Granular permissions and approval workflows</li> <li>Audit Trail - Complete transaction history and compliance tracking</li> </ul>"},{"location":"#system-architecture","title":"\ud83d\udcca System Architecture","text":"<pre><code>graph TB\n    A[Cargo Registration] --&gt; B[Manifest Creation]\n    B --&gt; C[Vehicle Assignment]\n    C --&gt; D[Trip Execution]\n    D --&gt; E[Fund Management]\n    D --&gt; F[Fuel Management]\n    E --&gt; G[Financial Settlement]\n    F --&gt; G\n    D --&gt; H[Real-time Tracking]\n    D --&gt; I[Reporting &amp; Analytics]</code></pre>"},{"location":"#core-modules","title":"\ud83d\udee0\ufe0f Core Modules","text":""},{"location":"#master-data-management","title":"Master Data Management","text":"<ul> <li>Vehicle Registry - Complete truck and trailer specifications</li> <li>Driver Management - Driver profiles with document management</li> <li>Route Configuration - Predefined routes with distance and fuel calculations</li> <li>Expense Templates - Standardized cost structures per route</li> </ul>"},{"location":"#transaction-processing","title":"Transaction Processing","text":"<ul> <li>Cargo Registration - Customer service entry with invoice generation</li> <li>Manifest Management - Vehicle-cargo assignment with trailer support</li> <li>Trip Execution - Complete journey management with 7 specialized tabs</li> <li>Financial Workflows - Fund approval and fuel procurement processes</li> </ul>"},{"location":"#operational-intelligence","title":"Operational Intelligence","text":"<ul> <li>Real-time Tracking - GPS integration with location updates</li> <li>Breakdown Management - Trip interruption handling and reassignment</li> <li>Performance Analytics - Fuel efficiency and cost analysis</li> <li>Compliance Reporting - Regulatory and audit trail management</li> </ul>"},{"location":"#target-users","title":"\ud83c\udfaf Target Users","text":""},{"location":"#transportation-companies","title":"Transportation Companies","text":"<ul> <li>Logistics Providers - Complete cargo-to-delivery management</li> <li>Fleet Operators - Vehicle and driver optimization</li> <li>Cross-Border Transport - International route management</li> </ul>"},{"location":"#enterprise-organizations","title":"Enterprise Organizations","text":"<ul> <li>Manufacturing Companies - In-house fleet management</li> <li>Distribution Centers - Delivery fleet optimization</li> <li>Service Companies - Field service vehicle management</li> </ul>"},{"location":"#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"#1-installation","title":"1. Installation","text":"<pre><code># Install on existing ERPNext system\nbench get-app https://github.com/nelsonmpanju/Fleet-Management-System.git\nbench --site [your-site] install-app vsd_fleet_ms\n</code></pre>"},{"location":"#2-configuration","title":"2. Configuration","text":"<ul> <li>Set up Transport Settings with fuel items and warehouses</li> <li>Configure accounting dimensions for financial tracking</li> <li>Define master data (trucks, drivers, routes, expenses)</li> </ul>"},{"location":"#3-first-trip","title":"3. First Trip","text":"<ul> <li>Register customer cargo with service details</li> <li>Create manifest and assign vehicles</li> <li>Generate trip with automatic expense allocation</li> <li>Execute trip with real-time tracking</li> </ul>"},{"location":"#documentation","title":"\ud83d\udcda Documentation","text":""},{"location":"#getting-started","title":"Getting Started","text":"<ul> <li>Complete Workflow Guide - End-to-end process documentation</li> <li>Installation Guide - System setup and configuration</li> </ul>"},{"location":"#core-operations","title":"Core Operations","text":"<ul> <li>Cargo Registration - Customer service management</li> <li>Manifest Management - Vehicle assignment workflow</li> <li>Trip Management - Transportation execution</li> <li>Financial Workflows - Fund and fuel management</li> </ul>"},{"location":"#technical-reference","title":"Technical Reference","text":"<ul> <li>API Reference - Complete doctype specifications</li> <li>Setup Guides - Master data and system configuration</li> </ul>"},{"location":"#technology-stack","title":"\ud83d\udd27 Technology Stack","text":"<ul> <li>Framework: Frappe/ERPNext v15+</li> <li>Database: MariaDB/MySQL</li> <li>Frontend: Frappe UI with Material Design</li> <li>Backend: Python 3.10+</li> <li>Integration: REST APIs, Webhooks, ERPNext native</li> </ul>"},{"location":"#key-differentiators","title":"\ud83c\udf1f Key Differentiators","text":""},{"location":"#erpnext-native","title":"ERPNext Native","text":"<p>Unlike standalone fleet management systems, VSD Fleet MS is built natively on ERPNext, providing: - Unified Data Model - Single source of truth for all business data - Integrated Financials - Seamless accounting and reporting - Extensible Architecture - Easy customization and integration</p>"},{"location":"#professional-workflows","title":"Professional Workflows","text":"<ul> <li>Approval-Based Operations - Multi-level approval for funds and fuel</li> <li>Status-Driven Processes - Clear progression through trip lifecycle</li> <li>Exception Handling - Breakdown management and trip reassignment</li> </ul>"},{"location":"#enterprise-features","title":"Enterprise Features","text":"<ul> <li>Multi-Currency Support - USD/TZS with automatic exchange rates</li> <li>Accounting Dimensions - Granular cost tracking and analysis</li> <li>Audit Compliance - Complete transaction history and trail</li> </ul>"},{"location":"#contributing","title":"\ud83e\udd1d Contributing","text":"<p>We welcome contributions from the community! Whether you're a developer, business analyst, or fleet management expert, there are many ways to contribute:</p>"},{"location":"#development","title":"Development","text":"<ul> <li>Bug Reports - Help improve system stability</li> <li>Feature Requests - Suggest new capabilities</li> <li>Code Contributions - Enhance functionality</li> <li>Documentation - Improve user guides and technical docs</li> </ul>"},{"location":"#business-expertise","title":"Business Expertise","text":"<ul> <li>Workflow Optimization - Suggest process improvements</li> <li>Industry Knowledge - Share transportation best practices</li> <li>User Testing - Provide feedback on usability</li> <li>Case Studies - Document successful implementations</li> </ul>"},{"location":"#getting-started_1","title":"Getting Started","text":"<ol> <li>Fork the repository on GitHub</li> <li>Create a feature branch for your contribution</li> <li>Develop your changes following our guidelines</li> <li>Test thoroughly on a development environment</li> <li>Submit a pull request with detailed description</li> </ol>"},{"location":"#support-community","title":"\ud83d\udcde Support &amp; Community","text":""},{"location":"#documentation_1","title":"Documentation","text":"<ul> <li>User Guides - Step-by-step instructions for all features</li> <li>API Reference - Complete technical documentation</li> <li>Video Tutorials - Visual learning resources</li> </ul>"},{"location":"#community-support","title":"Community Support","text":"<ul> <li>GitHub Issues - Bug reports and feature requests</li> <li>Discussions - Community forum for questions and ideas</li> <li>Contributions - Code, documentation, and testing</li> </ul>"},{"location":"#professional-support","title":"Professional Support","text":"<ul> <li>Email Support - nelsonnorbert87@gmail.com</li> <li>Implementation Services - Custom setup and training</li> <li>Consulting - Workflow optimization and customization</li> </ul>"},{"location":"#license","title":"\ud83d\udcc4 License","text":"<p>This project is licensed under the GNU General Public License v3.0 - see the LICENSE file for details.</p>"},{"location":"#acknowledgments","title":"\ud83d\ude4f Acknowledgments","text":""},{"location":"#original-development","title":"Original Development","text":"<ul> <li>VVSD-LTD - Original creators of the VSD Fleet Management System</li> <li>SAP Research - Inspiration and best practices from SAP's fleet management solutions</li> <li>ERPNext Community - Framework and ecosystem support</li> </ul>"},{"location":"#community-contributions","title":"Community Contributions","text":"<ul> <li>Documentation - Comprehensive guides and technical references</li> <li>Feature Enhancements - Customer-driven improvements</li> <li>Testing &amp; Feedback - Quality assurance and user experience improvements</li> </ul>   **Ready to transform your fleet operations?**  [\ud83d\ude80 Get Started](user-guide/complete-workflow.md) \u2022 [\ud83d\udcd6 View Documentation](api/doctype-reference.md) \u2022 [\ud83e\udd1d Contribute](https://github.com/nelsonmpanju/Fleet-Management-System)  **Forked from [VVSD-LTD/vsd_fleet_ms](https://github.com/VVSD-LTD/vsd_fleet_ms) with enhanced documentation and features**"},{"location":"CONTRIBUTING/","title":"Contributing to VSD Fleet Management System","text":"<p>Thank you for your interest in contributing to VSD Fleet Management System! This document provides guidelines and information for contributors of all types - developers, business analysts, documentation writers, and fleet management experts.</p>"},{"location":"CONTRIBUTING/#project-background","title":"\ud83d\udcdd Project Background","text":"<p>This is a community fork of the original VVSD-LTD/vsd_fleet_ms project, enhanced with comprehensive documentation and additional features based on real customer needs. The original project was built by VVSD-LTD after studying SAP's fleet management solutions, making it one of the most sophisticated fleet management applications in the ERPNext ecosystem.</p> <p>Why This Fork Exists: Instead of building a new fleet management system from scratch, this fork provides a solid foundation with professional documentation, allowing developers to start with a proven solution and contribute improvements.</p>"},{"location":"CONTRIBUTING/#why-contribute","title":"\ud83c\udf1f Why Contribute?","text":"<p>VSD Fleet MS is more than just another fleet management system. It's a native ERPNext solution that brings enterprise-grade fleet management to organizations worldwide. By contributing, you're helping to:</p> <ul> <li>Transform Transportation Operations - Enable efficient, cost-effective fleet management</li> <li>Bridge Technology Gaps - Connect ERP systems with fleet operations</li> <li>Support Global Logistics - Help companies manage cross-border and international transport</li> <li>Build Open Source Excellence - Create a world-class, community-driven solution</li> <li>Avoid Reinventing the Wheel - Build upon proven SAP-inspired architecture</li> </ul>"},{"location":"CONTRIBUTING/#areas-for-contribution","title":"\ud83c\udfaf Areas for Contribution","text":""},{"location":"CONTRIBUTING/#development","title":"\ud83d\ude80 Development","text":"<ul> <li>Bug Fixes - Improve system stability and reliability</li> <li>Feature Development - Add new capabilities and enhancements</li> <li>Performance Optimization - Improve system speed and efficiency</li> <li>Integration Development - Connect with third-party systems</li> </ul>"},{"location":"CONTRIBUTING/#business-logic","title":"\ud83d\udcca Business Logic","text":"<ul> <li>Workflow Optimization - Improve business processes and efficiency</li> <li>Industry Expertise - Share transportation and logistics knowledge</li> <li>Compliance Features - Add regulatory and legal compliance capabilities</li> <li>Best Practices - Implement industry-standard procedures</li> </ul>"},{"location":"CONTRIBUTING/#documentation","title":"\ud83d\udcda Documentation","text":"<ul> <li>User Guides - Create clear, comprehensive instructions</li> <li>Technical Documentation - Document APIs, configurations, and integrations</li> <li>Video Tutorials - Create visual learning resources</li> <li>Case Studies - Document successful implementations</li> </ul>"},{"location":"CONTRIBUTING/#testing-quality","title":"\ud83e\uddea Testing &amp; Quality","text":"<ul> <li>User Testing - Test features and provide feedback</li> <li>Performance Testing - Validate system performance under load</li> <li>Integration Testing - Test with various ERPNext configurations</li> <li>Regression Testing - Ensure new changes don't break existing functionality</li> </ul>"},{"location":"CONTRIBUTING/#known-issues-easy-first-contributions","title":"\ud83d\udc1b Known Issues &amp; Easy First Contributions","text":""},{"location":"CONTRIBUTING/#doctype-naming-convention-perfect-for-new-contributors","title":"DocType Naming Convention \u2b50 Perfect for New Contributors","text":"<p>\ud83c\udfaf The Perfect First Contribution Opportunity!</p> <p>Many doctypes are in plural format (e.g., <code>trips</code>, <code>trucks</code>, <code>drivers</code>) due to conflicts with existing ERPNext doctypes during local customization. This is a known issue that provides an excellent first contribution opportunity:</p>"},{"location":"CONTRIBUTING/#why-this-happened","title":"Why This Happened","text":"<p>There were conflicts with existing local customization app doctypes that were already present on sites. The following doctypes already existed and caused naming conflicts:</p> <p>Existing ERPNext Doctypes that Caused Conflicts: - <code>trip</code> - Already exists in ERPNext core - <code>truck</code> - Already exists in ERPNext core - <code>driver</code> - Already exists in ERPNext core - <code>trailer</code> - Already exists in ERPNext core - <code>route</code> - Already exists in ERPNext core - <code>location</code> - Already exists in ERPNext core - <code>fuel</code> - Already exists in ERPNext core - <code>expense</code> - Already exists in ERPNext core - <code>payment</code> - Already exists in ERPNext core - <code>request</code> - Already exists in ERPNext core</p> <p>Solution Applied: The easiest solution was to make the doctypes plural to avoid naming conflicts: - <code>trip</code> \u2192 <code>trips</code> - <code>truck</code> \u2192 <code>trucks</code>  - <code>driver</code> \u2192 <code>drivers</code> - <code>trailer</code> \u2192 <code>trailers</code> - <code>route</code> \u2192 <code>routes</code> - <code>location</code> \u2192 <code>locations</code> - <code>fuel</code> \u2192 <code>fuels</code> - <code>expense</code> \u2192 <code>expenses</code> - <code>payment</code> \u2192 <code>payments</code> - <code>request</code> \u2192 <code>requests</code></p>"},{"location":"CONTRIBUTING/#the-issue","title":"The Issue","text":"<ul> <li>Current: <code>trips</code>, <code>trucks</code>, <code>drivers</code>, <code>trailers</code>, etc.</li> <li>Should be: <code>trip</code>, <code>truck</code>, <code>driver</code>, <code>trailer</code>, etc.</li> <li>Impact: Minor - affects naming convention only</li> <li>Difficulty: Easy - suitable for new contributors</li> </ul>"},{"location":"CONTRIBUTING/#files-to-modify","title":"Files to Modify","text":"<ul> <li><code>vsd_fleet_ms/doctype/trips/</code> \u2192 <code>vsd_fleet_ms/doctype/trip/</code></li> <li><code>vsd_fleet_ms/doctype/trucks/</code> \u2192 <code>vsd_fleet_ms/doctype/truck/</code></li> <li><code>vsd_fleet_ms/doctype/drivers/</code> \u2192 <code>vsd_fleet_ms/doctype/driver/</code></li> <li><code>vsd_fleet_ms/doctype/trailers/</code> \u2192 <code>vsd_fleet_ms/doctype/trailer/</code></li> <li>And other similar plural doctypes</li> </ul>"},{"location":"CONTRIBUTING/#what-you-need-to-do","title":"What You Need to Do","text":"<ol> <li>Rename directories from plural to singular</li> <li>Update JSON files to reflect new names</li> <li>Update Python imports and references</li> <li>Update JavaScript references if any</li> <li>Test thoroughly to ensure nothing breaks</li> </ol>"},{"location":"CONTRIBUTING/#why-this-is-perfect-for-new-contributors","title":"Why This is Perfect for New Contributors","text":"<ul> <li>\u2705 Clear scope - well-defined task</li> <li>\u2705 Low risk - naming convention change only</li> <li>\u2705 Good learning - understand Frappe doctype structure</li> <li>\u2705 High impact - improves code consistency</li> <li>\u2705 Easy to test - clear before/after state</li> </ul>"},{"location":"CONTRIBUTING/#other-easy-contribution-areas","title":"Other Easy Contribution Areas","text":"<ul> <li>Documentation improvements - Fix typos, add examples, clarify instructions</li> <li>Code comments - Add docstrings and inline comments</li> <li>UI text - Improve field labels and descriptions</li> <li>Error messages - Make them more user-friendly</li> </ul>"},{"location":"CONTRIBUTING/#development-setup","title":"\ud83d\udee0\ufe0f Development Setup","text":""},{"location":"CONTRIBUTING/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.10+</li> <li>Node.js 16+</li> <li>Git</li> <li>Frappe Bench (for ERPNext development)</li> </ul>"},{"location":"CONTRIBUTING/#local-development-environment","title":"Local Development Environment","text":"<ol> <li> <p>Clone the Repository <pre><code>git clone https://github.com/nelsonmpanju/Fleet-Management-System.git\ncd Fleet-Management-System\n</code></pre></p> </li> <li> <p>Install Dependencies <pre><code># Install Python dependencies\npip install -r requirements.txt\n\n# Install Node.js dependencies (if any)\nnpm install\n</code></pre></p> </li> <li> <p>Setup Frappe Bench <pre><code># Install Frappe Bench\npip install frappe-bench\n\n# Initialize bench\nbench init frappe-bench\ncd frappe-bench\n\n# Create new site\nbench new-site fleet-ms.local\n\n# Install ERPNext\nbench get-app erpnext\nbench --site fleet-ms.local install-app erpnext\n\n# Install VSD Fleet MS\nbench get-app vsd_fleet_ms\nbench --site fleet-ms.local install-app vsd_fleet_ms\n</code></pre></p> </li> <li> <p>Start Development Server <pre><code>bench start\n</code></pre></p> </li> </ol>"},{"location":"CONTRIBUTING/#code-style-guidelines","title":"Code Style Guidelines","text":""},{"location":"CONTRIBUTING/#python-code","title":"Python Code","text":"<ul> <li>Follow PEP 8 style guidelines</li> <li>Use meaningful variable and function names</li> <li>Add docstrings for all functions and classes</li> <li>Keep functions focused and single-purpose</li> </ul> <pre><code>def create_vehicle_trip_from_manifest(manifest_name, transporter_type):\n    \"\"\"\n    Create a vehicle trip from an existing manifest.\n\n    Args:\n        manifest_name (str): Name of the source manifest\n        transporter_type (str): Type of transporter (In House/Sub-Contractor)\n\n    Returns:\n        dict: Created trip document data\n    \"\"\"\n    # Implementation here\n</code></pre>"},{"location":"CONTRIBUTING/#javascript-code","title":"JavaScript Code","text":"<ul> <li>Use ES6+ features where appropriate</li> <li>Follow consistent naming conventions</li> <li>Add JSDoc comments for complex functions</li> <li>Handle errors gracefully</li> </ul> <pre><code>/**\n * Assign cargo to manifest with validation\n * @param {string} cargoId - Cargo identifier\n * @param {string} manifestName - Target manifest name\n * @returns {Promise&lt;Object&gt;} Assignment result\n */\nasync function assignCargoToManifest(cargoId, manifestName) {\n    try {\n        // Implementation here\n    } catch (error) {\n        console.error('Assignment failed:', error);\n        throw error;\n    }\n}\n</code></pre>"},{"location":"CONTRIBUTING/#doctype-development","title":"DocType Development","text":"<ul> <li>Use descriptive field names</li> <li>Include proper validation rules</li> <li>Add helpful field descriptions</li> <li>Follow ERPNext naming conventions</li> </ul>"},{"location":"CONTRIBUTING/#contribution-process","title":"\ud83d\udccb Contribution Process","text":""},{"location":"CONTRIBUTING/#1-issue-reporting","title":"1. Issue Reporting","text":"<p>Before starting work, check if an issue already exists: - Bug Reports: Include steps to reproduce, expected vs actual behavior - Feature Requests: Describe the use case and business value - Enhancement Ideas: Explain the improvement and benefits</p>"},{"location":"CONTRIBUTING/#2-development-workflow","title":"2. Development Workflow","text":"<ol> <li>Fork the repository on GitHub</li> <li>Create a feature branch: <code>git checkout -b feature/amazing-feature</code></li> <li>Make your changes following the coding guidelines</li> <li>Test thoroughly on your local environment</li> <li>Commit with clear, descriptive messages</li> <li>Push to your fork and create a Pull Request</li> </ol>"},{"location":"CONTRIBUTING/#3-pull-request-guidelines","title":"3. Pull Request Guidelines","text":"<ul> <li>Clear Title: Describe the change concisely</li> <li>Detailed Description: Explain what, why, and how</li> <li>Screenshots: Include UI changes or new features</li> <li>Testing: Describe how you tested the changes</li> <li>Related Issues: Link to any related issues</li> </ul>"},{"location":"CONTRIBUTING/#4-code-review-process","title":"4. Code Review Process","text":"<ul> <li>All contributions require review by maintainers</li> <li>Address feedback and make requested changes</li> <li>Ensure all tests pass</li> <li>Update documentation as needed</li> </ul>"},{"location":"CONTRIBUTING/#priority-areas","title":"\ud83c\udfaf Priority Areas","text":""},{"location":"CONTRIBUTING/#high-priority","title":"High Priority","text":"<ul> <li>Bug Fixes - Critical issues affecting system stability</li> <li>Security Issues - Vulnerabilities and security concerns</li> <li>Data Integrity - Issues affecting data accuracy and consistency</li> <li>Performance - Significant performance improvements</li> </ul>"},{"location":"CONTRIBUTING/#medium-priority","title":"Medium Priority","text":"<ul> <li>New Features - Valuable functionality additions</li> <li>UI/UX Improvements - Better user experience</li> <li>Integration Enhancements - Better ERPNext integration</li> <li>Documentation - Improved guides and references</li> </ul>"},{"location":"CONTRIBUTING/#low-priority","title":"Low Priority","text":"<ul> <li>Nice-to-Have Features - Convenience and enhancement features</li> <li>Code Refactoring - Code quality improvements</li> <li>Additional Reports - New reporting capabilities</li> <li>Localization - Multi-language support</li> </ul>"},{"location":"CONTRIBUTING/#testing-guidelines","title":"\ud83e\uddea Testing Guidelines","text":""},{"location":"CONTRIBUTING/#unit-testing","title":"Unit Testing","text":"<ul> <li>Write tests for all new functions and methods</li> <li>Maintain high test coverage</li> <li>Test edge cases and error conditions</li> <li>Use descriptive test names</li> </ul> <pre><code>def test_create_vehicle_trip_from_manifest():\n    \"\"\"Test vehicle trip creation from manifest\"\"\"\n    # Setup test data\n    manifest = create_test_manifest()\n\n    # Execute function\n    trip = create_vehicle_trip_from_manifest(manifest.name, \"In House\")\n\n    # Assert results\n    assert trip.manifest == manifest.name\n    assert trip.transporter_type == \"In House\"\n</code></pre>"},{"location":"CONTRIBUTING/#integration-testing","title":"Integration Testing","text":"<ul> <li>Test complete workflows end-to-end</li> <li>Verify ERPNext integration points</li> <li>Test with real data scenarios</li> <li>Validate financial calculations</li> </ul>"},{"location":"CONTRIBUTING/#user-acceptance-testing","title":"User Acceptance Testing","text":"<ul> <li>Test from end-user perspective</li> <li>Verify business process flows</li> <li>Check data accuracy and consistency</li> <li>Validate reporting outputs</li> </ul>"},{"location":"CONTRIBUTING/#documentation-standards","title":"\ud83d\udcda Documentation Standards","text":""},{"location":"CONTRIBUTING/#user-documentation","title":"User Documentation","text":"<ul> <li>Write for the end-user, not developers</li> <li>Use clear, simple language</li> <li>Include step-by-step instructions</li> <li>Add screenshots for complex processes</li> <li>Provide examples and use cases</li> </ul>"},{"location":"CONTRIBUTING/#technical-documentation","title":"Technical Documentation","text":"<ul> <li>Document all public APIs and methods</li> <li>Include code examples</li> <li>Explain configuration options</li> <li>Provide troubleshooting guides</li> <li>Keep documentation up-to-date</li> </ul>"},{"location":"CONTRIBUTING/#api-documentation","title":"API Documentation","text":"<ul> <li>Document all endpoints and parameters</li> <li>Include request/response examples</li> <li>Explain authentication and authorization</li> <li>Provide error code explanations</li> </ul>"},{"location":"CONTRIBUTING/#community-guidelines","title":"\ud83e\udd1d Community Guidelines","text":""},{"location":"CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<ul> <li>Be respectful and inclusive</li> <li>Welcome newcomers and help them contribute</li> <li>Provide constructive feedback</li> <li>Focus on the code and ideas, not the person</li> </ul>"},{"location":"CONTRIBUTING/#communication","title":"Communication","text":"<ul> <li>Use clear, professional language</li> <li>Be patient with questions and clarifications</li> <li>Share knowledge and help others learn</li> <li>Celebrate contributions and successes</li> </ul>"},{"location":"CONTRIBUTING/#collaboration","title":"Collaboration","text":"<ul> <li>Work together to solve problems</li> <li>Share ideas and suggestions</li> <li>Help review and improve others' work</li> <li>Build on existing contributions</li> </ul>"},{"location":"CONTRIBUTING/#recognition","title":"\ud83c\udfc6 Recognition","text":""},{"location":"CONTRIBUTING/#contributor-recognition","title":"Contributor Recognition","text":"<ul> <li>Contributors List: All contributors are listed in the repository</li> <li>Release Notes: Significant contributions are mentioned in releases</li> <li>Documentation Credits: Contributors are credited in documentation</li> <li>Community Spotlight: Featured contributors in community updates</li> </ul>"},{"location":"CONTRIBUTING/#types-of-contributions","title":"Types of Contributions","text":"<ul> <li>Code Contributions: Bug fixes, features, improvements</li> <li>Documentation: Guides, tutorials, API docs</li> <li>Testing: Bug reports, testing, quality assurance</li> <li>Community: Support, mentoring, evangelism</li> </ul>"},{"location":"CONTRIBUTING/#getting-help","title":"\ud83d\udcde Getting Help","text":""},{"location":"CONTRIBUTING/#development-questions","title":"Development Questions","text":"<ul> <li>GitHub Issues: For bug reports and feature requests</li> <li>GitHub Discussions: For questions and community discussions</li> <li>Email: nelsonnorbert87@gmail.com for direct support</li> </ul>"},{"location":"CONTRIBUTING/#learning-resources","title":"Learning Resources","text":"<ul> <li>ERPNext Documentation: https://docs.erpnext.com/</li> <li>Frappe Framework: https://frappeframework.com/docs</li> <li>Python Documentation: https://docs.python.org/</li> <li>JavaScript Resources: https://developer.mozilla.org/en-US/docs/Web/JavaScript</li> </ul>"},{"location":"CONTRIBUTING/#quick-start-for-new-contributors","title":"\ud83d\ude80 Quick Start for New Contributors","text":"<ol> <li>Choose an Issue: Look for issues labeled \"good first issue\" or \"help wanted\"</li> <li>Set Up Environment: Follow the development setup instructions</li> <li>Make a Small Change: Start with a simple bug fix or documentation update</li> <li>Submit Your First PR: Follow the contribution process</li> <li>Get Feedback: Learn from code reviews and community feedback</li> <li>Keep Contributing: Build on your experience and tackle more complex issues</li> </ol>"},{"location":"CONTRIBUTING/#recommended-first-contributions","title":"Recommended First Contributions","text":"<ol> <li>Fix a typo in documentation</li> <li>Add a comment to unclear code</li> <li>Improve an error message</li> <li>Add a docstring to a function</li> <li>Fix the plural doctype naming (see Known Issues section)</li> </ol>"},{"location":"CONTRIBUTING/#license","title":"\ud83d\udcc4 License","text":"<p>By contributing to VSD Fleet Management System, you agree that your contributions will be licensed under the same license as the project (GNU General Public License v3.0).</p>"},{"location":"CONTRIBUTING/#acknowledgments","title":"\ud83d\ude4f Acknowledgments","text":""},{"location":"CONTRIBUTING/#original-development","title":"Original Development","text":"<ul> <li>VVSD-LTD - Original creators of the VSD Fleet Management System</li> <li>SAP Research - Inspiration and best practices from SAP's fleet management solutions</li> <li>ERPNext Community - Framework and ecosystem support</li> </ul>"},{"location":"CONTRIBUTING/#community-contributions","title":"Community Contributions","text":"<ul> <li>Documentation - Comprehensive guides and technical references</li> <li>Feature Enhancements - Customer-driven improvements</li> <li>Testing &amp; Feedback - Quality assurance and user experience improvements</li> </ul>   **Ready to make a difference in fleet management?**  [\ud83d\ude80 Start Contributing](https://github.com/nelsonmpanju/Fleet-Management-System) \u2022 [\ud83d\udcd6 View Issues](https://github.com/nelsonmpanju/Fleet-Management-System/issues) \u2022 [\ud83d\udcac Join Discussion](https://github.com/nelsonmpanju/Fleet-Management-System/discussions)  **Forked from [VVSD-LTD/vsd_fleet_ms](https://github.com/VVSD-LTD/vsd_fleet_ms) with enhanced documentation and features**"},{"location":"installation/","title":"Installation Guide","text":"<p>This guide will walk you through the process of installing and setting up the VSD Fleet Management System.</p> <p></p> <p>The VSD Fleet Management System provides a comprehensive workspace for managing fleet operations after successful installation and configuration.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Frappe/ERPNext environment (Version 15 or later)</li> <li>Python 3.10+</li> <li>Git</li> </ul>"},{"location":"installation/#installation-steps","title":"Installation Steps","text":"<ol> <li> <p>Change to your bench directory:    <pre><code>cd frappe-bench\n</code></pre></p> </li> <li> <p>Get the app from GitHub:    <pre><code>bench get-app vsd_fleet_ms https://github.com/nelsonmpanju/Fleet-Management-System.git\n</code></pre></p> </li> <li> <p>Install the app on your site:    <pre><code>bench --site your-site.local install-app vsd_fleet_ms\n</code></pre></p> </li> <li> <p>Run migrations (if any):    <pre><code>bench --site your-site.local migrate\n</code></pre></p> </li> </ol>"},{"location":"installation/#configuration","title":"Configuration","text":"<p>After installation, you'll need to:</p> <ol> <li>Set up basic configurations through ERPNext settings</li> <li>Configure GPS tracking settings (if using this feature)</li> <li>Set up user permissions and roles</li> <li>Configure email notifications (optional)</li> </ol>"},{"location":"installation/#verification","title":"Verification","text":"<p>To verify the installation:</p> <ol> <li>Login to your ERPNext site</li> <li>Look for \"VSD Fleet MS\" in the modules list</li> <li>Try creating a new vehicle record</li> </ol>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter any issues during installation:</p> <ol> <li> <p>Check the bench logs:    <pre><code>bench logs\n</code></pre></p> </li> <li> <p>Ensure all dependencies are installed:    <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Clear cache and rebuild:    <pre><code>bench clear-cache\nbench build\n</code></pre></p> </li> </ol> <p>For additional help, please refer to our support section or raise an issue on GitHub. </p>"},{"location":"api/doctype-reference/","title":"DocType API Reference","text":"<p>This comprehensive reference documents all major doctypes in the VSD Fleet Management System, including their fields, relationships, and key methods.</p>"},{"location":"api/doctype-reference/#core-transaction-doctypes","title":"Core Transaction Doctypes","text":""},{"location":"api/doctype-reference/#cargo-registration","title":"Cargo Registration","text":"<p>Purpose: Customer cargo registration and service request management</p>"},{"location":"api/doctype-reference/#key-fields","title":"Key Fields","text":"<pre><code>{\n  \"customer\": \"Link to Customer\",\n  \"transport_type\": \"Select: Cross Border/Internal\", \n  \"posting_date\": \"Date\",\n  \"cargo_details\": \"Table: Cargo Detail child table\",\n  \"requested_fund\": \"Table: Requested Fund Details\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#child-table-cargo-detail","title":"Child Table: Cargo Detail","text":"<pre><code>{\n  \"container_size\": \"Select: Loose/20 FT/40 FT\",\n  \"net_weight\": \"Float: Weight in kg\",\n  \"cargo_route\": \"Link: Trip Routes\",\n  \"service_item\": \"Link: Item for billing\",\n  \"rate\": \"Float: Service rate\",\n  \"manifest_number\": \"Link: Assigned manifest\",\n  \"created_trip\": \"Data: Generated trip reference\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#key-methods","title":"Key Methods","text":"<ul> <li><code>create_sales_invoice()</code>: Generate customer invoice from selected cargo</li> <li>JavaScript: <code>assign_manifest()</code>: Assign cargo to vehicle manifest</li> </ul>"},{"location":"api/doctype-reference/#business-rules","title":"Business Rules","text":"<ul> <li>Each cargo row represents one vehicle's capacity</li> <li>Invoice creation required before manifest assignment</li> <li>Location validation (city must match country)</li> </ul>"},{"location":"api/doctype-reference/#manifest","title":"Manifest","text":"<p>Purpose: Vehicle assignment and cargo organization for trips</p>"},{"location":"api/doctype-reference/#key-fields_1","title":"Key Fields","text":"<pre><code>{\n  \"route\": \"Link: Trip Routes\",\n  \"transporter_type\": \"Select: In House/Sub-Contractor\",\n  \"truck\": \"Link: Truck (for In House)\",\n  \"assigned_driver\": \"Link: Truck Driver\",\n  \"has_trailers\": \"Check: Enable trailer selection\",\n  \"trailer_1/2/3\": \"Link: Up to 3 trailers\",\n  \"manifest_cargo_details\": \"Table: Cargo assignments\",\n  \"vehicle_trip\": \"Link: Generated trip\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#child-table-manifest-cargo-details","title":"Child Table: Manifest Cargo Details","text":"<pre><code>{\n  \"cargo_id\": \"Data: Reference to cargo detail\",\n  \"cargo_allocation\": \"Select: Truck/Trailers\", \n  \"specific_cargo_allocated\": \"Data: Specific vehicle/trailer\",\n  \"weight\": \"Float: Cargo weight\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#key-methods_1","title":"Key Methods","text":"<ul> <li><code>get_manifests()</code>: Fetch available manifests by route</li> <li><code>add_to_existing_manifest()</code>: Add cargo to existing manifest</li> <li><code>create_new_manifest()</code>: Create manifest with cargo</li> <li><code>validate()</code>: Update truck status on submission</li> </ul>"},{"location":"api/doctype-reference/#business-rules_1","title":"Business Rules","text":"<ul> <li>Only idle trucks can be assigned</li> <li>Trailer selection must be sequential (1, 2, 3)</li> <li>Cargo allocation must match available vehicles</li> </ul>"},{"location":"api/doctype-reference/#trips","title":"Trips","text":"<p>Purpose: Complete trip execution and management</p>"},{"location":"api/doctype-reference/#key-fields_2","title":"Key Fields","text":"<pre><code>{\n  \"manifest\": \"Link: Source manifest\",\n  \"route\": \"Link: Trip route\",\n  \"transporter_type\": \"Data: In House/Sub-Contractor\",\n  \"main_route_steps\": \"Table: Route execution steps\",\n  \"side_trips\": \"Table: Additional route deviations\",\n  \"location_update\": \"Table: GPS/manual tracking\",\n  \"requested_fund_accounts_table\": \"Table: Trip expenses\",\n  \"fuel_request_history\": \"Table: Fuel requirements\",\n  \"trip_status\": \"Select: Pending/Completed/Breakdown\",\n  \"trip_completed\": \"Check: Completion flag\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#child-tables","title":"Child Tables","text":""},{"location":"api/doctype-reference/#route-steps","title":"Route Steps","text":"<pre><code>{\n  \"location\": \"Data: Stop name\",\n  \"distance\": \"Int: Kilometers\",\n  \"fuel_consumption_qty\": \"Float: Liters\",\n  \"location_type\": \"Select: Loading/Offloading/Border/Town\",\n  \"loading_date\": \"Date: Actual pickup\",\n  \"offloading_date\": \"Date: Actual delivery\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#requested-fund-details","title":"Requested Fund Details","text":"<pre><code>{\n  \"expense_type\": \"Link: Fixed Expenses\",\n  \"request_amount\": \"Currency: Amount requested\",\n  \"request_currency\": \"Link: USD/TZS\",\n  \"request_status\": \"Select: Requested/Approved/Rejected\",\n  \"expense_account\": \"Link: GL expense account\",\n  \"payable_account\": \"Link: Cash/bank account\",\n  \"journal_entry\": \"Link: Payment voucher\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#fuel-requests-table","title":"Fuel Requests Table","text":"<pre><code>{\n  \"item_code\": \"Link: Fuel item\",\n  \"quantity\": \"Float: Liters required\",\n  \"cost_per_litre\": \"Currency: Fuel price\",\n  \"total_cost\": \"Currency: Calculated total\",\n  \"supplier\": \"Link: Fuel supplier\",\n  \"status\": \"Select: Requested/Approved/Rejected\",\n  \"purchase_order\": \"Link: Generated PO\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#key-methods_2","title":"Key Methods","text":"<ul> <li><code>create_vehicle_trip_from_manifest()</code>: Generate trip from manifest</li> <li><code>create_fund_jl()</code>: Create Journal Entry for approved funds</li> <li><code>create_purchase_order()</code>: Generate PO for fuel</li> <li><code>create_stock_out_entry()</code>: Process fuel stock consumption</li> <li><code>create_breakdown()</code>: Handle vehicle breakdown</li> <li><code>create_resumption_trip()</code>: Generate replacement trip</li> </ul>"},{"location":"api/doctype-reference/#business-rules_2","title":"Business Rules","text":"<ul> <li>All fund/fuel requests must be approved before submission</li> <li>Approved requests must have corresponding PO/Journal Entry</li> <li>Stock out entry required for In House trips</li> </ul>"},{"location":"api/doctype-reference/#support-doctypes","title":"Support Doctypes","text":""},{"location":"api/doctype-reference/#fuel-requests","title":"Fuel Requests","text":"<p>Purpose: Centralized fuel approval management</p>"},{"location":"api/doctype-reference/#key-fields_3","title":"Key Fields","text":"<pre><code>{\n  \"reference_doctype\": \"Link: Source document type\",\n  \"reference_docname\": \"Dynamic: Source document\",\n  \"truck\": \"Link: Vehicle\",\n  \"truck_driver\": \"Link: Driver\",\n  \"main_route\": \"Link: Trip route\",\n  \"requested_fuel\": \"Table: Pending requests\",\n  \"approved_requests\": \"Table: Processed requests\",\n  \"status\": \"Select: Waiting/Partially/Fully Processed\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#custom-methods","title":"Custom Methods","text":"<ul> <li>Custom <code>load_from_db()</code>: Loads approved/rejected requests</li> <li><code>update_children()</code>: Prevents standard child table updates</li> </ul>"},{"location":"api/doctype-reference/#requested-payment","title":"Requested Payment","text":"<p>Purpose: Trip fund approval management</p>"},{"location":"api/doctype-reference/#key-fields_4","title":"Key Fields","text":"<pre><code>{\n  \"company\": \"Link: Operating company\",\n  \"truck_driver\": \"Link: Driver\",\n  \"manifest\": \"Link: Source manifest\",\n  \"requested_funds\": \"Table: Pending fund requests\",\n  \"accounts_approval\": \"Table: Processed requests\",\n  \"approval_status\": \"Select: Waiting/Processed\",\n  \"payment_status\": \"Select: Waiting/Paid\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#javascript-features","title":"JavaScript Features","text":"<ul> <li>Real-time total calculations</li> <li>Approve/reject button handling</li> <li>Payment status tracking</li> <li>Journal Entry integration</li> </ul>"},{"location":"api/doctype-reference/#master-data-doctypes","title":"Master Data Doctypes","text":""},{"location":"api/doctype-reference/#truck","title":"Truck","text":"<p>Purpose: Vehicle master data and status tracking</p>"},{"location":"api/doctype-reference/#key-fields_5","title":"Key Fields","text":"<pre><code>{\n  \"truck_number\": \"Data: Unique identifier\",\n  \"license_plate\": \"Data: Registration number\",\n  \"make\": \"Data: Manufacturer\",\n  \"model\": \"Data: Vehicle model\",\n  \"fuel_type\": \"Select: Petrol/Diesel\",\n  \"status\": \"Select: Idle/On Trip/Under Maintenance/Disabled\",\n  \"trans_ms_current_trip\": \"Link: Active trip\",\n  \"trans_ms_fuel_warehouse\": \"Link: Fuel storage location\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#status-management","title":"Status Management","text":"<ul> <li>Idle: Available for assignment</li> <li>On Trip: Currently assigned to active trip</li> <li>Under Maintenance: Temporarily unavailable</li> <li>Disabled: Permanently unavailable</li> </ul>"},{"location":"api/doctype-reference/#truck-driver","title":"Truck Driver","text":"<p>Purpose: Driver master data and availability tracking</p>"},{"location":"api/doctype-reference/#key-fields_6","title":"Key Fields","text":"<pre><code>{\n  \"full_name\": \"Data: Driver name\",\n  \"status\": \"Select: Active/Suspended/Left\",\n  \"cell_number\": \"Data: Contact number\",\n  \"employee\": \"Link: HR Employee record\",\n  \"in_trip\": \"Check: Current trip status\",\n  \"drivers_document\": \"Table: License and certifications\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#trip-routes","title":"Trip Routes","text":"<p>Purpose: Route definition with steps and expenses</p>"},{"location":"api/doctype-reference/#key-fields_7","title":"Key Fields","text":"<pre><code>{\n  \"route_name\": \"Data: Unique route identifier\",\n  \"starting_point\": \"Data: Origin location\",\n  \"ending_point\": \"Data: Destination location\", \n  \"trip_steps\": \"Table: Route waypoints\",\n  \"fixed_expenses\": \"Table: Standard route costs\",\n  \"total_distance\": \"Int: Calculated distance\",\n  \"total_fuel_consumption_qty\": \"Float: Calculated fuel\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#child-tables_1","title":"Child Tables","text":""},{"location":"api/doctype-reference/#trip-steps","title":"Trip Steps","text":"<pre><code>{\n  \"location\": \"Data: Waypoint name\",\n  \"distance\": \"Int: Kilometers from previous\",\n  \"fuel_consumption_qty\": \"Float: Liters for segment\",\n  \"location_type\": \"Select: Loading/Offloading/Border/Town\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#fixed-expenses-table","title":"Fixed Expenses Table","text":"<pre><code>{\n  \"expense\": \"Link: Fixed Expenses master\",\n  \"amount\": \"Currency: Standard amount\",\n  \"currency\": \"Link: USD/TZS\",\n  \"party_type\": \"Select: Employee/Supplier\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#transport-settings","title":"Transport Settings","text":"<p>Purpose: System-wide configuration (SingleDocType)</p>"},{"location":"api/doctype-reference/#key-fields_8","title":"Key Fields","text":"<pre><code>{\n  \"fuel_item\": \"Link: Default fuel item\",\n  \"vehicle_fuel_parent_warehouse\": \"Link: Main fuel warehouse\",\n  \"sales_item_group\": \"Link: Service item group\",\n  \"expense_account_group\": \"Table: Expense account categories\",\n  \"cash_or_bank_account_group\": \"Table: Payment account categories\",\n  \"accounting_dimension\": \"Table: Dimension mapping rules\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#accounting-dimension-table","title":"Accounting Dimension Table","text":"<pre><code>{\n  \"dimension_name\": \"Data: Dimension identifier\",\n  \"source_doctype\": \"Link: Source document\",\n  \"source_field_name\": \"Data: Source field\",\n  \"target_doctype\": \"Link: Target document\", \n  \"target_field_name\": \"Data: Target field\",\n  \"source_type\": \"Select: Field/Value/Child\",\n  \"target_type\": \"Select: Main/Child\"\n}\n</code></pre>"},{"location":"api/doctype-reference/#utility-functions","title":"Utility Functions","text":""},{"location":"api/doctype-reference/#dimension-setting","title":"Dimension Setting","text":"<pre><code>def set_dimension(src_doc, tr_doc, src_child=None, tr_child=None):\n    \"\"\"Apply accounting dimensions from source to target document\"\"\"\n    # Fetch Transport Settings dimension configuration\n    # Apply field mappings based on doctype combinations\n    # Handle main document and child table dimensions\n</code></pre>"},{"location":"api/doctype-reference/#custom-functions","title":"Custom Functions","text":"<pre><code>def update_child_table(self, fieldname, df=None):\n    \"\"\"Prevent modification of approved/rejected fund requests\"\"\"\n    # Custom child table update logic\n    # Protect approved/rejected financial records\n</code></pre> <pre><code>def add_to_manifest(route_starting_point):\n    \"\"\"Fetch available cargo for manifest assignment\"\"\"\n    # Query cargo details by route\n    # Filter unassigned, submitted cargo\n    # Return data for manifest dialog\n</code></pre>"},{"location":"api/doctype-reference/#api-integration-points","title":"API Integration Points","text":""},{"location":"api/doctype-reference/#erpnext-integration","title":"ERPNext Integration","text":"<ul> <li>Stock Entry: Fuel consumption tracking</li> <li>Purchase Order: Fuel procurement</li> <li>Journal Entry: Financial transactions</li> <li>Sales Invoice: Customer billing</li> </ul>"},{"location":"api/doctype-reference/#custom-workflows","title":"Custom Workflows","text":"<ul> <li>Manifest Assignment: Cargo to vehicle assignment</li> <li>Trip Creation: Automated trip generation</li> <li>Approval Workflows: Fund and fuel approval</li> <li>Status Updates: Vehicle and driver availability</li> </ul>"},{"location":"api/doctype-reference/#javascript-event-handlers","title":"JavaScript Event Handlers","text":""},{"location":"api/doctype-reference/#form-events","title":"Form Events","text":"<pre><code>// Cargo Registration\nfrappe.ui.form.on('Cargo Registration', {\n    create_invoice: function(frm) {\n        // Generate customer invoice from selected cargo\n    }\n});\n\n// Manifest  \nfrappe.ui.form.on('Manifest', {\n    refresh: function(frm) {\n        // Add custom buttons for cargo management\n        // Filter vehicle/driver selection\n    }\n});\n\n// Trips\nfrappe.ui.form.on('Trips', {\n    refresh: function(frm) {\n        // Add action buttons (complete, breakdown)\n        // Calculate financial summaries\n    }\n});\n</code></pre>"},{"location":"api/doctype-reference/#child-table-events","title":"Child Table Events","text":"<pre><code>frappe.ui.form.on('Cargo Detail', {\n    assign_manifest: function(frm, cdt, cdn) {\n        // Open manifest assignment dialog\n    }\n});\n\nfrappe.ui.form.on('Fuel Requests Table', {\n    create_purchase_order: function(frm, cdt, cdn) {\n        // Generate PO for approved fuel\n    }\n});\n</code></pre> <p>This reference provides the technical foundation for understanding the VSD Fleet Management System's data structure and API capabilities for customization and integration purposes.</p>"},{"location":"setup/configuration/","title":"Configuration: Trips &amp; Settings Doctypes","text":"<p>This section details all configuration-level DocTypes under Trips and Settings. For each, you\u2019ll find an overview, key fields, and screenshots to guide setup.</p>"},{"location":"setup/configuration/#trip-locations","title":"\ufffd\ufe0f Trip Locations","text":"<p>Overview: Defines each physical point used in routes, from depots to border crossings. Essential for mapping and geofencing.</p> <p>Key Fields:</p> <ul> <li>Location Name: Descriptive label.</li> <li>Country: Linked for regional grouping.</li> <li>Geolocation: Latitude &amp; longitude for map plotting.</li> <li>Is Local/International Border: Flags for special handling.</li> </ul>"},{"location":"setup/configuration/#trip-location-type","title":"\ufffd Trip Location Type","text":"<p>Overview: Categorizes locations by the data you need to capture (arrival, departure, loading, offloading).</p> <p>Key Fields:</p> <ul> <li>Location Type: Unique label (e.g., City, Border Post).</li> <li>Arrival/Departure/Loading/Offloading Date Flags: Checkboxes to enable date fields per type.</li> </ul>"},{"location":"setup/configuration/#trip-routes","title":"\ufffd Trip Routes","text":"<p>Overview: Defines a named multi\u2011leg route by linking locations in sequence, then automatically summarizes total distance, fuel use, and fixed costs.</p> <p>Key Fields:</p> <ul> <li>Route Name: Unique identifier for the route.  </li> <li>Starting Point / Ending Point: Origin and destination links.  </li> <li>Trip Steps (child table):  </li> <li>Location \u2013 Waypoint name (e.g., town, border post)  </li> <li>Distance \u2013 Kilometers from previous step  </li> <li>Fuel Consumption Qty \u2013 Liters estimated for each leg  </li> <li>Location Type \u2013 Loading Point, Town, Border Point, Offloading Point, etc.  </li> <li>Total Distance &amp; Total Fuel Consumption Qty: Read\u2011only aggregates of all steps.  </li> <li>Fixed Expenses (child table):  </li> <li>Expense \u2013 Description (e.g., \u201cBorder Charges\u201d)  </li> <li>Currency \u2013 TZS, USD, etc.  </li> <li>Amount \u2013 Value per trip  </li> <li>Party Type \u2013 (Optional) Supplier, Customer, etc.  </li> </ul>"},{"location":"setup/configuration/#cargo-types","title":"\ufffd Cargo Types","text":"<p>Overview: Registers cargo categories and any required permits for transport compliance.</p> <p>Key Fields:</p> <ul> <li>Name: Cargo category (e.g., Perishable, Hazardous).</li> <li>Permits: Table of documentation needed for each type.</li> </ul>"},{"location":"setup/configuration/#trip-fixed-expense","title":"\ufffd Trip Fixed Expense","text":"<p>Overview: Maintains standard costs associated with trips, such as tolls, permits, or driver allowances.</p> <p>Key Fields:</p> <ul> <li>Expense Category: Label (e.g., Toll, Permit).</li> <li>Amount (Local &amp; USD): Specify cost in dual currencies.</li> <li>Linked Route/Trip: Optionally tie expense to specific routes.</li> </ul>"},{"location":"setup/configuration/#truck-trailer-inspection","title":"\ufffd Truck &amp; Trailer Inspection","text":"<p>Overview: Tracks inspection records for vehicles and trailers to ensure safety and compliance before trips.</p> <p>Key Fields:</p> <ul> <li>Inspection Date: Date of check.</li> <li>Vehicle/Trailer Reference: Links to Truck or Trailer.</li> <li>Checklist Items: Table of inspected components and statuses.</li> </ul>"},{"location":"setup/configuration/#transport-settings","title":"\u2699\ufe0f Transport Settings","text":"<p>Overview: General configuration for fleet operations, such as default warehouses, cost centers, and notification parameters.</p> <p>Key Fields:</p> <ul> <li>Default Fuel Warehouse: Links to a warehouse record.</li> <li>Default Driver &amp; Vehicle Settings: Pre-set defaults for new trips.</li> <li>Notification Thresholds: Define alerts for low fuel, overdue inspections, etc.</li> </ul> <p>With these configurations in place, your Trips module is fully operational. Next, we\u2019ll document the Transaction Doctypes where actual trip data is recorded.</p>"},{"location":"setup/master/","title":"Setup: Master Doctypes","text":"<p>This section covers the four core Master Doctypes that form the foundation of your VSD Fleet MS setup. For each DocType, you'll find an overview, key fields, and screenshots to guide you through configuration.</p>"},{"location":"setup/master/#truck","title":"\ud83d\ude9a Truck","text":"<p>Overview: The Truck DocType captures all essential vehicle information, from identifiers to operational status and default settings.</p> <p>Key Fields:</p> <ul> <li>Truck Number: Unique identifier; also drives autonaming.</li> <li>License Plate: Visible in list views for quick lookup.</li> <li>Make &amp; Model: Manufacturer data; required for asset tracking.</li> <li>Manufacturing Year &amp; Acquisition Year: Helps in depreciation and maintenance scheduling.</li> <li>Fuel Type &amp; Fuel UOM: Defines compatible fuel and unit of measure.</li> <li>Chassis Number &amp; Engine Number: Critical for compliance and record-keeping.</li> <li>Status: Workflow state (Idle, On Trip, Under Maintenance, Disabled).</li> </ul>"},{"location":"setup/master/#trailer","title":"\ud83d\ude9b Trailer","text":"<p>Overview: The Trailer DocType holds specifications and identification for attached trailers.</p> <p>Key Fields:</p> <ul> <li>Plate Number: Unique and required.</li> <li>Trailer Number: Custom identifier.</li> <li>Trailer Type &amp; Tyre Specification: Defines capacity and operational constraints.</li> <li>Number of Axels &amp; Suspension Type: For load calculations and maintenance.</li> <li>Status: Indicates availability or maintenance state.</li> <li>Manufacturing Year: Asset age tracking.</li> </ul>"},{"location":"setup/master/#truck-driver","title":"\ud83d\udc64 Truck Driver","text":"<p>Overview: Captures driver profiles and assignment details for operations.</p> <p>Key Fields:</p> <ul> <li>Full Name: Required primary identifier; drives autonaming (<code>Driver-{YYYY}-{####}</code>).</li> <li>Status: Current employment state (Active, Suspended, Left).</li> <li>Cellphone Number: Unique contact for alerts and dispatch.</li> <li>Address: Residential or mailing address.</li> <li>Employee: Link to the Employee record in HR for payroll and records.</li> <li>In Trip?: Read-only flag indicating if the driver is currently assigned to a trip.</li> <li>Driver\u2019s Document: Table of attachments (licenses, certifications) to ensure compliance.</li> </ul>"},{"location":"setup/master/#fuel-uom","title":"\u26fd Fuel UOM","text":"<p>Overview: Defines all fuel measurement units used across transactions.</p> <p>Key Fields:</p> <ul> <li>UOM Name: Unique name (e.g., Liters, Gallons) and drives autonaming.</li> <li>Enabled: Checkbox to activate or deactivate the unit in the system.</li> </ul> <p>Next up: In the Configuration section, we\u2019ll dive into Trips and Settings doctypes to complete your setup workflow.</p>"},{"location":"transactions/cargo-registration/","title":"Cargo Registration: Customer Service Entry Point","text":"<p>The Cargo Registration doctype is the primary entry point for all customer transportation requests. This document captures customer cargo details and initiates the fleet management workflow.</p>"},{"location":"transactions/cargo-registration/#purpose-and-scope","title":"Purpose and Scope","text":"<p>Cargo Registration serves multiple critical functions: - Customer Request Management: Central repository for all transportation requests - Cargo Specification: Detailed cargo characteristics and requirements - Service Pricing: Rate definition and invoice generation - Workflow Initiation: Starting point for manifest and trip creation - Compliance Documentation: Required shipping and regulatory information</p>"},{"location":"transactions/cargo-registration/#document-structure","title":"Document Structure","text":""},{"location":"transactions/cargo-registration/#header-information","title":"Header Information","text":"Field Type Purpose Required Customer Link Customer requesting service Yes Transport Type Select Cross Border / Internal Yes Posting Date Date Registration date (auto-filled) Yes Company Link Your company entity Yes"},{"location":"transactions/cargo-registration/#cargo-details-child-table","title":"Cargo Details (Child Table)","text":"<p>Each row represents cargo requiring one vehicle:</p>"},{"location":"transactions/cargo-registration/#cargo-identification","title":"Cargo Identification","text":"<ul> <li>Cargo ID: Auto-generated unique identifier</li> <li>Container Size: Loose / 20 FT / 40 FT</li> <li>Container Number: Required for containerized cargo</li> <li>BL Number: Bill of Lading reference</li> <li>Seal Number: Container seal (for sealed containers)</li> </ul>"},{"location":"transactions/cargo-registration/#cargo-specifications","title":"Cargo Specifications","text":"<ul> <li>Cargo Type: Link to Cargo Types master</li> <li>Net Weight (kg): Cargo weight in kilograms</li> <li>Number of Packages: Count of individual packages</li> <li>Cargo Route: Link to predefined Trip Routes</li> </ul>"},{"location":"transactions/cargo-registration/#location-information","title":"Location Information","text":"<ul> <li>Cargo Location Country/City: Pickup location</li> <li>Cargo Destination Country/City: Delivery destination  </li> <li>Expected Loading Date: Planned pickup date</li> <li>Expected Offloading Date: Planned delivery date</li> </ul>"},{"location":"transactions/cargo-registration/#service-charges","title":"Service Charges","text":"<ul> <li>Service Item: Transportation service from Item master</li> <li>Currency: Billing currency (USD/TZS)</li> <li>Rate: Price per unit/service</li> </ul>"},{"location":"transactions/cargo-registration/#assignment-tracking","title":"Assignment Tracking","text":"<ul> <li>Manifest Number: Assigned manifest (auto-filled)</li> <li>Transporter Type: In House / Sub-Contractor (auto-filled)</li> <li>Assigned Truck/Driver: Vehicle assignment details</li> <li>Created Trip: Generated trip reference</li> <li>Sales Invoice: Generated invoice reference</li> </ul>"},{"location":"transactions/cargo-registration/#key-features-and-functionality","title":"Key Features and Functionality","text":""},{"location":"transactions/cargo-registration/#1-intelligent-cargo-planning","title":"1. Intelligent Cargo Planning","text":"<p>Best Practice: Each cargo detail row should represent one vehicle's capacity. - For multi-vehicle cargo, create separate rows per vehicle - System validates location relationships - Automatic weight conversion (kg to tonnes) - Date validation (loading before offloading)</p>"},{"location":"transactions/cargo-registration/#2-dynamic-location-filtering","title":"2. Dynamic Location Filtering","text":"<p>JavaScript implementation automatically filters cities based on selected countries: <pre><code>// Automatic city filtering based on country selection\ncargo_location_city_filter(frm, cdt, cdn);\ncargo_destination_city_filter(frm, cdt, cdn);\n</code></pre></p>"},{"location":"transactions/cargo-registration/#3-invoice-generation-workflow","title":"3. Invoice Generation Workflow","text":"<p>The Create Invoice button generates customer invoices: - Select specific cargo rows using checkboxes - System creates Sales Invoice with:   - Vehicle details (when assigned)   - Route information   - Service charges   - Optional weight-based billing</p> <p>Important: Create invoice before submitting Cargo Registration.</p>"},{"location":"transactions/cargo-registration/#4-manifest-assignment-integration","title":"4. Manifest Assignment Integration","text":"<p>Each cargo row includes Assign Manifest button: - Opens dialog showing available manifests for the route - Displays truck and driver details - Options to assign to existing or create new manifest - Seamless integration with vehicle assignment</p>"},{"location":"transactions/cargo-registration/#business-process-flow","title":"Business Process Flow","text":""},{"location":"transactions/cargo-registration/#step-1-customer-request","title":"Step 1: Customer Request","text":"<ol> <li>Customer contacts for transportation service</li> <li>Create new Cargo Registration</li> <li>Enter customer and transport type</li> </ol>"},{"location":"transactions/cargo-registration/#step-2-cargo-documentation","title":"Step 2: Cargo Documentation","text":"<ol> <li>Add cargo details row for each vehicle needed</li> <li>Specify container/package details</li> <li>Define pickup and delivery locations</li> <li>Set expected dates</li> </ol>"},{"location":"transactions/cargo-registration/#step-3-service-pricing","title":"Step 3: Service Pricing","text":"<ol> <li>Select appropriate service item</li> <li>Define currency and rate</li> <li>Consider weight-based billing options</li> </ol>"},{"location":"transactions/cargo-registration/#step-4-invoice-generation","title":"Step 4: Invoice Generation","text":"<ol> <li>Select cargo rows for billing</li> <li>Click Create Invoice</li> <li>Review generated Sales Invoice</li> <li>Send to customer for approval</li> </ol>"},{"location":"transactions/cargo-registration/#step-5-vehicle-assignment","title":"Step 5: Vehicle Assignment","text":"<ol> <li>Click Assign Manifest on cargo rows</li> <li>Choose existing manifest or create new</li> <li>System initiates vehicle assignment workflow</li> </ol>"},{"location":"transactions/cargo-registration/#validation-rules","title":"Validation Rules","text":""},{"location":"transactions/cargo-registration/#automatic-validations","title":"Automatic Validations","text":"<ul> <li>Date Logic: Loading date must be before offloading date</li> <li>Weight Conversion: Automatic kg to tonnes calculation</li> <li>Location Relationships: City must belong to selected country</li> <li>Service Items: Must be from \"Services\" item group</li> </ul>"},{"location":"transactions/cargo-registration/#business-rules","title":"Business Rules","text":"<ul> <li>Cannot modify cargo after manifest assignment</li> <li>Invoice creation locks cargo specifications</li> <li>Container number mandatory for containerized cargo</li> <li>Route selection drives available manifests</li> </ul>"},{"location":"transactions/cargo-registration/#integration-points","title":"Integration Points","text":""},{"location":"transactions/cargo-registration/#upstream-dependencies","title":"Upstream Dependencies","text":"<ul> <li>Customer Master: Valid customer required</li> <li>Item Master: Service items for billing</li> <li>Trip Routes: Available transportation routes</li> <li>Cargo Types: Cargo classification</li> <li>Transport Locations: Pickup/delivery points</li> </ul>"},{"location":"transactions/cargo-registration/#downstream-processes","title":"Downstream Processes","text":"<ul> <li>Sales Invoice: Customer billing</li> <li>Manifest: Vehicle assignment</li> <li>Trips: Transportation execution</li> <li>Fuel Requests: Fuel planning</li> <li>Requested Payment: Expense management</li> </ul>"},{"location":"transactions/cargo-registration/#javascript-functionality","title":"JavaScript Functionality","text":""},{"location":"transactions/cargo-registration/#form-behavior","title":"Form Behavior","text":"<pre><code>// Auto-fill posting date and make read-only\nif (!frm.doc.posting_date) {\n    frm.set_value('posting_date', frappe.datetime.nowdate());\n    frm.set_df_property('posting_date', 'read_only', 1);\n}\n</code></pre>"},{"location":"transactions/cargo-registration/#invoice-creation","title":"Invoice Creation","text":"<pre><code>create_invoice: function(frm) {\n    let selected = frm.get_selected().cargo_details;\n    if (selected) {\n        let rows = frm.doc.cargo_details.filter(i =&gt; \n            selected.includes(i.name) &amp;&amp; !i.invoice);\n        // Generate invoice for selected rows\n    }\n}\n</code></pre>"},{"location":"transactions/cargo-registration/#manifest-assignment-dialog","title":"Manifest Assignment Dialog","text":"<ul> <li>Dynamic table generation showing available manifests</li> <li>Single-selection checkbox behavior</li> <li>Integration with manifest creation/assignment APIs</li> </ul>"},{"location":"transactions/cargo-registration/#reporting-and-analytics","title":"Reporting and Analytics","text":""},{"location":"transactions/cargo-registration/#key-metrics","title":"Key Metrics","text":"<ul> <li>Cargo registration volume by customer</li> <li>Average weight per vehicle type</li> <li>Route utilization patterns</li> <li>Service pricing analysis</li> <li>Time from registration to delivery</li> </ul>"},{"location":"transactions/cargo-registration/#standard-reports","title":"Standard Reports","text":"<ul> <li>Cargo registration summary</li> <li>Customer service analysis</li> <li>Route demand planning</li> <li>Vehicle capacity utilization</li> </ul>"},{"location":"transactions/cargo-registration/#best-practices","title":"Best Practices","text":""},{"location":"transactions/cargo-registration/#data-entry-guidelines","title":"Data Entry Guidelines","text":"<ol> <li>Accurate Planning: One row per vehicle ensures proper resource allocation</li> <li>Complete Information: Fill all required fields for smooth processing</li> <li>Realistic Dates: Set achievable loading/offloading dates</li> <li>Proper Classification: Select correct cargo types for compliance</li> </ol>"},{"location":"transactions/cargo-registration/#workflow-optimization","title":"Workflow Optimization","text":"<ol> <li>Batch Processing: Group similar cargo for efficient manifest creation</li> <li>Early Invoicing: Generate invoices promptly for cash flow</li> <li>Route Consolidation: Combine compatible cargo on same routes</li> <li>Regular Review: Monitor pending assignments and follow up</li> </ol>"},{"location":"transactions/cargo-registration/#quality-control","title":"Quality Control","text":"<ol> <li>Weight Verification: Confirm actual vs. declared weights</li> <li>Documentation: Ensure all required documents attached</li> <li>Customer Communication: Keep customers informed of status</li> <li>Compliance Check: Verify regulatory requirements met</li> </ol> <p>The Cargo Registration doctype forms the foundation of your fleet management operations, ensuring accurate customer service delivery from initial request through final delivery.</p>"},{"location":"transactions/financial-workflows/","title":"Financial Workflows: Fund and Fuel Management","text":"<p>The VSD Fleet Management System includes sophisticated financial management workflows for handling trip expenses and fuel procurement. These processes ensure proper authorization, tracking, and accounting for all transportation-related costs.</p>"},{"location":"transactions/financial-workflows/#overview-of-financial-processes","title":"Overview of Financial Processes","text":""},{"location":"transactions/financial-workflows/#two-primary-financial-workflows","title":"Two Primary Financial Workflows","text":"<ol> <li>Trip Fund Management: Handling fixed expenses, driver allowances, and operational costs</li> <li>Fuel Request Management: Managing fuel procurement, approval, and stock management</li> </ol>"},{"location":"transactions/financial-workflows/#integration-with-erpnext","title":"Integration with ERPNext","text":"<ul> <li>Journal Entries: Automatic creation for approved funds</li> <li>Purchase Orders: Generated for approved fuel requests</li> <li>Stock Entries: Fuel stock management and consumption</li> <li>Accounting Dimensions: Automatic dimension setting for financial tracking</li> </ul>"},{"location":"transactions/financial-workflows/#trip-fund-management-workflow","title":"Trip Fund Management Workflow","text":""},{"location":"transactions/financial-workflows/#1-automatic-fund-request-generation","title":"1. Automatic Fund Request Generation","text":"<p>When a trip is created, the system automatically generates fund requests based on the route's fixed expenses:</p> <pre><code>def set_expenses(self):\n    reference_route = frappe.get_doc(\"Trip Routes\", self.route)\n    for row in reference_route.fixed_expenses:\n        fixed_expense_doc = frappe.get_doc(\"Fixed Expenses\", row.expense)\n        new_row = self.append(\"requested_fund_accounts_table\", {\n            \"requested_date\": nowdate(),\n            \"request_amount\": row.amount,\n            \"request_currency\": row.currency,\n            \"request_status\": \"Requested\",\n            \"expense_type\": row.expense,\n            \"expense_account\": fixed_expense_doc.expense_account,\n            \"payable_account\": fixed_expense_doc.cash_bank_account,\n            \"party_type\": row.party_type,\n        })\n</code></pre>"},{"location":"transactions/financial-workflows/#2-requested-payment-document","title":"2. Requested Payment Document","text":"<p>The system creates a Requested Payment document that aggregates all fund requests for approval:</p>"},{"location":"transactions/financial-workflows/#document-structure","title":"Document Structure","text":"<ul> <li>Header Information: Company, truck, driver, manifest details</li> <li>Requested Funds: All pending fund requests</li> <li>Approval Section: Approved/rejected requests</li> <li>Status Tracking: Overall approval and payment status</li> </ul>"},{"location":"transactions/financial-workflows/#key-features","title":"Key Features","text":"<ul> <li>Approve/Reject Buttons: Individual request management</li> <li>Real-time Totals: USD and TZS summaries</li> <li>Status Updates: Automatic status progression</li> <li>Payment Tracking: Journal entry linking</li> </ul>"},{"location":"transactions/financial-workflows/#3-fund-approval-process","title":"3. Fund Approval Process","text":""},{"location":"transactions/financial-workflows/#approval-interface","title":"Approval Interface","text":"<pre><code>// Approve/Reject buttons with status tracking\ncur_frm.cscript.approve_request = function(frm) {\n    // Move from requested to approved status\n    // Update totals and payment status\n};\n\ncur_frm.cscript.reject_request = function(frm) {\n    // Move to rejected status with reason\n    // Update approval tracking\n};\n</code></pre>"},{"location":"transactions/financial-workflows/#business-logic","title":"Business Logic","text":"<ol> <li>Individual Review: Each expense item reviewed separately</li> <li>Status Progression: Requested \u2192 Approved/Rejected</li> <li>Automatic Totaling: Real-time calculation of approved amounts</li> <li>Payment Status: Waiting Approval \u2192 Waiting Payment \u2192 Paid</li> </ol>"},{"location":"transactions/financial-workflows/#4-journal-entry-creation","title":"4. Journal Entry Creation","text":"<p>For approved fund requests, the system creates Journal Entries:</p> <pre><code>@frappe.whitelist()\ndef create_fund_jl(doc, row):\n    # Multi-currency handling\n    if company_currency != row.request_currency:\n        multi_currency = 1\n        exchange_rate = get_exchange_rate(row.request_currency, company_currency)\n\n    # Create Journal Entry with proper accounts\n    jv_doc = frappe.get_doc(dict(\n        doctype=\"Journal Entry\",\n        posting_date=row.requested_date,\n        accounts=accounts,\n        company=doc.company,\n        multi_currency=multi_currency,\n    ))\n\n    # Set accounting dimensions\n    set_dimension(doc, jv_doc)\n    jv_doc.save()\n</code></pre>"},{"location":"transactions/financial-workflows/#fuel-request-management-workflow","title":"Fuel Request Management Workflow","text":""},{"location":"transactions/financial-workflows/#1-fuel-request-creation","title":"1. Fuel Request Creation","text":"<p>Fuel requests are created within the Trip doctype's Fuel tab:</p>"},{"location":"transactions/financial-workflows/#required-information","title":"Required Information","text":"<ul> <li>Item Code: Fuel item from Transport Settings</li> <li>Quantity: Liters required</li> <li>Cost per Liter: Current fuel price</li> <li>Supplier: Fuel supplier</li> <li>Disbursement Type: Cash or Credit</li> <li>Currency: USD or TZS</li> </ul>"},{"location":"transactions/financial-workflows/#2-fuel-requests-document","title":"2. Fuel Requests Document","text":"<p>The Fuel Requests doctype aggregates all fuel requirements:</p>"},{"location":"transactions/financial-workflows/#document-features","title":"Document Features","text":"<ul> <li>Trip Reference: Links to originating trip</li> <li>Vehicle Information: Truck and driver details</li> <li>Route Context: Main and return route information</li> <li>Request Management: Pending, approved, and rejected requests</li> </ul>"},{"location":"transactions/financial-workflows/#custom-load-function","title":"Custom Load Function","text":"<pre><code>def load_from_db(self):\n    # Custom loading for approved/rejected requests\n    children_main_approved = frappe.db.get_values(\n        \"Fuel Requests Table\",\n        {\n            \"parent\": self.get(\"reference_docname\"),\n            \"status\": \"Approved\",\n        },\n        \"*\", as_dict=True\n    )\n    # Set approved requests in document\n</code></pre>"},{"location":"transactions/financial-workflows/#3-fuel-approval-process","title":"3. Fuel Approval Process","text":""},{"location":"transactions/financial-workflows/#approval-interface_1","title":"Approval Interface","text":"<ul> <li>Requested Fuel Section: Pending requests</li> <li>Approve Buttons: Individual request approval</li> <li>Approved/Rejected Section: Processed requests</li> <li>Status Tracking: Overall request status</li> </ul>"},{"location":"transactions/financial-workflows/#validation-rules","title":"Validation Rules","text":"<pre><code>def validate_request_status(self):\n    for row in self.fuel_request_history:\n        if row.status not in [\"Rejected\", \"Approved\"]:\n            frappe.throw(\"All fuel requests must be approved or rejected\")\n        if row.status == \"Approved\" and not row.purchase_order:\n            frappe.throw(\"Approved requests need Purchase Orders\")\n</code></pre>"},{"location":"transactions/financial-workflows/#4-purchase-order-generation","title":"4. Purchase Order Generation","text":"<p>For approved fuel requests, Purchase Orders are created:</p> <pre><code>@frappe.whitelist()\ndef create_purchase_order(request_doc, item):\n    doc = frappe.new_doc(\"Purchase Order\")\n    doc.company = request_doc.company\n    doc.supplier = item.supplier\n    doc.currency = item.currency\n    doc.set_warehouse = set_warehouse\n\n    new_item = doc.append(\"items\", {})\n    new_item.item_code = item.item_code\n    new_item.qty = item.quantity\n    new_item.rate = item.cost_per_litre\n\n    set_dimension(request_doc, doc)\n    doc.insert(ignore_permissions=True)\n</code></pre>"},{"location":"transactions/financial-workflows/#5-stock-entry-management","title":"5. Stock Entry Management","text":"<p>For fuel consumption tracking:</p> <pre><code>@frappe.whitelist()\ndef create_stock_out_entry(doc, fuel_stock_out):\n    fuel_item = frappe.get_value(\"Transport Settings\", None, \"fuel_item\")\n    warehouse = frappe.get_value(\"Truck\", doc.truck_number, \"trans_ms_fuel_warehouse\")\n\n    stock_entry_doc = frappe.get_doc(dict(\n        doctype=\"Stock Entry\",\n        stock_entry_type=\"Material Issue\",\n        from_warehouse=warehouse,\n        items=[{\"item_code\": fuel_item, \"qty\": float(fuel_stock_out)}],\n    ))\n\n    set_dimension(doc, stock_entry_doc)\n    stock_entry_doc.insert(ignore_permissions=True)\n</code></pre>"},{"location":"transactions/financial-workflows/#real-time-financial-tracking","title":"Real-time Financial Tracking","text":""},{"location":"transactions/financial-workflows/#dashboard-summaries","title":"Dashboard Summaries","text":""},{"location":"transactions/financial-workflows/#trip-funds-display","title":"Trip Funds Display","text":"<pre><code>function approved_total() {\n    var total_request_tsh = 0;\n    var total_request_usd = 0;\n\n    cur_frm.doc.requested_fund_accounts_table.forEach(function (row) {\n        if (row.request_currency == 'TZS' &amp;&amp; row.request_status == \"Approved\") {\n            total_request_tsh += row.request_amount;\n        }\n    });\n\n    // Update HTML display with totals\n    cur_frm.get_field(\"html2\").wrapper.innerHTML = \n        '&lt;p&gt;Total Amount Approved&lt;/p&gt;&lt;b&gt;USD ' + total_request_usd.toLocaleString() + \n        ' &lt;br&gt; TZS ' + total_request_tsh.toLocaleString() + '&lt;/b&gt;';\n}\n</code></pre>"},{"location":"transactions/financial-workflows/#fuel-tracking","title":"Fuel Tracking","text":"<pre><code>function fuel_amount() {\n    var approved_fuel = 0;\n    var requested_fuel = 0;\n    var rejected_fuel = 0;\n\n    cur_frm.doc.fuel_request_history.forEach(function (row) {\n        if (row.status == \"Approved\") {\n            approved_fuel += row.quantity;\n        }\n    });\n\n    // Display fuel summaries\n}\n</code></pre>"},{"location":"transactions/financial-workflows/#accounting-dimension-integration","title":"Accounting Dimension Integration","text":""},{"location":"transactions/financial-workflows/#automatic-dimension-setting","title":"Automatic Dimension Setting","text":"<p>The system automatically applies accounting dimensions to financial transactions:</p> <pre><code>def set_dimension(src_doc, tr_doc, src_child=None, tr_child=None):\n    set = frappe.get_cached_doc(\"Transport Settings\", \"Transport Settings\")\n    for dim in set.accounting_dimension:\n        if dim.source_doctype == src_doc.doctype and dim.target_doctype == tr_doc.doctype:\n            if dim.source_type == \"Field\":\n                value = src_doc.get(dim.source_field_name)\n            elif dim.source_type == \"Value\":\n                value = dim.value\n\n            if dim.target_type == \"Main\":\n                setattr(tr_doc, dim.target_field_name, value)\n</code></pre>"},{"location":"transactions/financial-workflows/#supported-dimensions","title":"Supported Dimensions","text":"<ul> <li>Truck: Vehicle-based cost tracking</li> <li>Route: Route-based profitability analysis</li> <li>Driver: Driver performance metrics</li> <li>Customer: Customer profitability tracking</li> </ul>"},{"location":"transactions/financial-workflows/#multi-currency-support","title":"Multi-Currency Support","text":""},{"location":"transactions/financial-workflows/#currency-handling","title":"Currency Handling","text":"<ul> <li>Base Currency: TZS (Tanzanian Shilling)</li> <li>Foreign Currency: USD (US Dollar)</li> <li>Exchange Rates: Automatic rate fetching</li> <li>Conversion Logic: Proper multi-currency accounting</li> </ul>"},{"location":"transactions/financial-workflows/#exchange-rate-management","title":"Exchange Rate Management","text":"<pre><code>if company_currency != row.request_currency:\n    multi_currency = 1\n    exchange_rate = get_exchange_rate(row.request_currency, company_currency)\n    debit_amount = row.request_amount * exchange_rate\nelse:\n    multi_currency = 0\n    exchange_rate = 1\n    debit_amount = row.request_amount\n</code></pre>"},{"location":"transactions/financial-workflows/#status-management-and-validation","title":"Status Management and Validation","text":""},{"location":"transactions/financial-workflows/#fund-request-statuses","title":"Fund Request Statuses","text":"<ul> <li>Requested: Initial state, awaiting approval</li> <li>Approved: Management approved, ready for payment</li> <li>Rejected: Request denied with reason</li> <li>Paid: Payment completed (Journal Entry created)</li> </ul>"},{"location":"transactions/financial-workflows/#fuel-request-statuses","title":"Fuel Request Statuses","text":"<ul> <li>Requested: Initial state, awaiting approval</li> <li>Approved: Approved for procurement</li> <li>Rejected: Request denied</li> <li>Ordered: Purchase Order created</li> </ul>"},{"location":"transactions/financial-workflows/#validation-gates","title":"Validation Gates","text":"<ol> <li>Trip Submission: All requests must be approved/rejected</li> <li>Fund Disbursement: Approved funds need Journal Entries</li> <li>Fuel Procurement: Approved fuel needs Purchase Orders</li> <li>Stock Management: Fuel consumption requires Stock Entries</li> </ol>"},{"location":"transactions/financial-workflows/#best-practices","title":"Best Practices","text":""},{"location":"transactions/financial-workflows/#fund-management","title":"Fund Management","text":"<ol> <li>Timely Approval: Process requests promptly for smooth operations</li> <li>Proper Documentation: Maintain clear approval reasons</li> <li>Budget Control: Monitor expense patterns and limits</li> <li>Regular Reconciliation: Match actual vs. planned expenses</li> </ol>"},{"location":"transactions/financial-workflows/#fuel-management","title":"Fuel Management","text":"<ol> <li>Market Pricing: Regular fuel price updates</li> <li>Supplier Management: Maintain approved supplier list</li> <li>Consumption Tracking: Monitor fuel efficiency patterns</li> <li>Stock Control: Maintain adequate fuel inventory</li> </ol>"},{"location":"transactions/financial-workflows/#financial-controls","title":"Financial Controls","text":"<ol> <li>Segregation of Duties: Separate request and approval roles</li> <li>Approval Limits: Define authorization levels</li> <li>Audit Trail: Maintain complete transaction history</li> <li>Regular Reports: Monitor financial performance</li> </ol>"},{"location":"transactions/financial-workflows/#reporting-and-analytics","title":"Reporting and Analytics","text":""},{"location":"transactions/financial-workflows/#standard-reports","title":"Standard Reports","text":"<ul> <li>Trip Report and Expenses: Complete financial analysis per trip</li> <li>Fuel Expense By Trip: Detailed fuel cost tracking</li> <li>General Ledger: Accounting impact analysis</li> </ul>"},{"location":"transactions/financial-workflows/#key-metrics","title":"Key Metrics","text":"<ul> <li>Cost per Trip: Total expenses per transportation job</li> <li>Fuel Efficiency: Consumption vs. planned ratios</li> <li>Approval Rates: Request approval/rejection patterns</li> <li>Payment Timing: Average payment processing time</li> </ul> <p>The financial workflow systems ensure complete control and visibility over transportation costs while maintaining integration with ERPNext's accounting framework for comprehensive financial management.</p>"},{"location":"transactions/manifest-management/","title":"Manifest Management: Vehicle Assignment and Trip Planning","text":"<p>The Manifest doctype serves as the critical bridge between cargo registration and trip execution, handling vehicle assignment, trailer allocation, and cargo organization for efficient transportation operations.</p>"},{"location":"transactions/manifest-management/#purpose-and-scope","title":"Purpose and Scope","text":"<p>Manifest management encompasses: - Vehicle Assignment: Linking cargo to specific trucks and drivers - Trailer Management: Allocating appropriate trailers for cargo types - Cargo Organization: Optimizing load distribution across vehicles - Trip Preparation: Setting up complete vehicle-cargo combinations - Transporter Coordination: Managing both in-house and sub-contractor operations</p>"},{"location":"transactions/manifest-management/#document-structure","title":"Document Structure","text":""},{"location":"transactions/manifest-management/#header-information","title":"Header Information","text":"Field Type Purpose Required Trip Route Link Transportation route Yes Transporter Select In House / Sub-Contractor Yes Vehicle Trip Link Generated trip reference Auto-filled Date Date Manifest creation date Yes"},{"location":"transactions/manifest-management/#in-house-operations","title":"In-House Operations","text":"Field Type Purpose Required Truck Number Link Selected vehicle Yes Truck License Plate Data Vehicle registration Auto-filled Assigned Driver Link Selected driver Yes Driver Name Data Driver full name Auto-filled"},{"location":"transactions/manifest-management/#sub-contractor-operations","title":"Sub-Contractor Operations","text":"Field Type Purpose Required Sub-Contractor Name Data Contractor company Yes Truck License Plate Data External vehicle plate Yes Driver Name Data External driver name Yes Driver License Number Data External license Optional"},{"location":"transactions/manifest-management/#trailer-configuration","title":"Trailer Configuration","text":"Field Type Purpose Required Has Trailers Check Enable trailer selection No Trailer \u00bd/3 Link Up to 3 trailers Conditional Trailer Types Data Auto-filled trailer specs Auto"},{"location":"transactions/manifest-management/#key-features-and-functionality","title":"Key Features and Functionality","text":""},{"location":"transactions/manifest-management/#1-dynamic-vehicle-assignment","title":"1. Dynamic Vehicle Assignment","text":""},{"location":"transactions/manifest-management/#truck-selection-logic","title":"Truck Selection Logic","text":"<pre><code>// Filter for idle, enabled trucks\nfrm.set_query(\"truck\", function () {\n    return {\n        filters: {\n            status: \"Idle\",\n            disabled: 0\n        }\n    };\n});\n</code></pre>"},{"location":"transactions/manifest-management/#driver-assignment","title":"Driver Assignment","text":"<pre><code>// Filter for active, available drivers\nfrm.set_query(\"assigned_driver\", function () {\n    return {\n        filters: {\n            in_trip: 0,\n            status: \"Active\"\n        }\n    };\n});\n</code></pre>"},{"location":"transactions/manifest-management/#2-intelligent-trailer-management","title":"2. Intelligent Trailer Management","text":""},{"location":"transactions/manifest-management/#cascade-selection","title":"Cascade Selection","text":"<ul> <li>Trailer 1: Must be selected before Trailer 2</li> <li>Trailer 2: Must be selected before Trailer 3</li> <li>Dependency Validation: Removing parent trailer clears child trailers</li> </ul>"},{"location":"transactions/manifest-management/#duplicate-prevention","title":"Duplicate Prevention","text":"<pre><code>function filters_for_trailers(trailer_names) {\n    // Prevent same trailer selection multiple times\n    cur_frm.set_query(\"trailer_1\", function () {\n        return {\n            filters: {\n                disabled: 0,\n                name: [\"not in\", trailer_names]\n            }\n        };\n    });\n}\n</code></pre>"},{"location":"transactions/manifest-management/#3-cargo-allocation-system","title":"3. Cargo Allocation System","text":""},{"location":"transactions/manifest-management/#allocation-options","title":"Allocation Options","text":"<ul> <li>Truck: Assign cargo directly to truck</li> <li>Trailers: Distribute cargo across trailers</li> </ul>"},{"location":"transactions/manifest-management/#smart-allocation-logic","title":"Smart Allocation Logic","text":"<pre><code>cargo_allocation: function(frm, cdt, cdn) {\n    var row = locals[cdt][cdn];\n    if (row.cargo_allocation == \"Truck\") {\n        if (!frm.doc.truck) {\n            frappe.msgprint(\"Please select truck before Allocating cargo to Truck\");\n            return;\n        }\n        row.specific_cargo_allocated = frm.doc.truck;\n    }\n}\n</code></pre>"},{"location":"transactions/manifest-management/#4-weight-management","title":"4. Weight Management","text":"<ul> <li>Automatic Calculation: Total manifest weight from all cargo</li> <li>Real-time Updates: Weight recalculation on cargo changes</li> <li>Load Validation: Ensure weight limits not exceeded</li> </ul>"},{"location":"transactions/manifest-management/#business-process-flow","title":"Business Process Flow","text":""},{"location":"transactions/manifest-management/#phase-1-manifest-creation","title":"Phase 1: Manifest Creation","text":"<ol> <li>From Cargo Registration: Click \"Assign Manifest\" on cargo row</li> <li>Dialog Selection: Choose existing manifest or create new</li> <li>Route Validation: System filters manifests by route</li> </ol>"},{"location":"transactions/manifest-management/#phase-2-vehicle-configuration","title":"Phase 2: Vehicle Configuration","text":"<ol> <li>Transporter Type: Select In House or Sub-Contractor</li> <li>Vehicle Selection: Choose truck (filters for available vehicles)</li> <li>Driver Assignment: Select driver (filters for available drivers)</li> <li>Trailer Setup: Configure trailers if needed</li> </ol>"},{"location":"transactions/manifest-management/#phase-3-cargo-organization","title":"Phase 3: Cargo Organization","text":"<ol> <li>Cargo Details: Review assigned cargo</li> <li>Allocation Strategy: Assign cargo to truck or specific trailers</li> <li>Weight Distribution: Ensure balanced loading</li> <li>Final Review: Verify all assignments correct</li> </ol>"},{"location":"transactions/manifest-management/#phase-4-manifest-submission","title":"Phase 4: Manifest Submission","text":"<ol> <li>Validation: System checks all required fields</li> <li>Vehicle Lock: Truck status changes to \"On Trip\"</li> <li>Trip Creation: \"Create Vehicle Trip\" button becomes available</li> </ol>"},{"location":"transactions/manifest-management/#javascript-functionality","title":"JavaScript Functionality","text":""},{"location":"transactions/manifest-management/#1-dynamic-form-behavior","title":"1. Dynamic Form Behavior","text":""},{"location":"transactions/manifest-management/#transporter-type-switching","title":"Transporter Type Switching","text":"<pre><code>transporter_type: (frm) =&gt; {\n    var transporter_type = frm.doc.transporter_type;\n    if (transporter_type === 'Sub-Contractor') {\n        // Hide in-house fields, show sub-contractor fields\n        frm.doc.manifest_cargo_details.forEach(function(row) {\n            row.transporter_type = 'Sub-Contractor';\n            row.sub_contractor_cargo_allocation = '';\n        });\n    }\n}\n</code></pre>"},{"location":"transactions/manifest-management/#trailer-dependency-management","title":"Trailer Dependency Management","text":"<pre><code>trailer_1: function(frm) {\n    if (!frm.doc.trailer_1) {\n        // Clear dependent trailers\n        frm.doc.trailer_2 = \"\";\n        frm.doc.trailer_3 = \"\";\n    }\n    // Update filters for remaining trailers\n    filters_for_trailers(trailer_names);\n}\n</code></pre>"},{"location":"transactions/manifest-management/#2-cargo-dialog-integration","title":"2. Cargo Dialog Integration","text":""},{"location":"transactions/manifest-management/#add-cargo-to-manifest","title":"Add Cargo to Manifest","text":"<pre><code>function showCargoDialog(data) {\n    var dialog = new frappe.ui.Dialog({\n        title: __(\"Cargo Details\"),\n        fields: [\n            {\n                fieldname: 'cargo_list',\n                fieldtype: 'Table',\n                data: data,\n            }\n        ],\n        primary_action: function() {\n            // Process selected cargo\n        }\n    });\n}\n</code></pre>"},{"location":"transactions/manifest-management/#validation-rules","title":"Validation Rules","text":""},{"location":"transactions/manifest-management/#business-logic-validations","title":"Business Logic Validations","text":"<ol> <li>Vehicle Availability: Only idle trucks can be assigned</li> <li>Driver Availability: Only available drivers can be assigned</li> <li>Trailer Sequence: Must select trailers in order (1, 2, 3)</li> <li>Weight Limits: Manifest weight cannot exceed vehicle capacity</li> <li>Route Consistency: All cargo must be on same route</li> </ol>"},{"location":"transactions/manifest-management/#system-enforced-rules","title":"System Enforced Rules","text":"<ol> <li>Unique Assignments: Same vehicle cannot be on multiple active manifests</li> <li>Status Validation: Submitted manifests cannot be modified</li> <li>Dependency Checks: Driver must belong to assigned truck (for defaults)</li> </ol>"},{"location":"transactions/manifest-management/#integration-points","title":"Integration Points","text":""},{"location":"transactions/manifest-management/#upstream-dependencies","title":"Upstream Dependencies","text":"<ul> <li>Cargo Registration: Source of cargo to be manifested</li> <li>Truck Master: Available vehicles and specifications</li> <li>Truck Driver: Available drivers and qualifications</li> <li>Trailer Master: Available trailers and types</li> <li>Trip Routes: Route definitions and requirements</li> </ul>"},{"location":"transactions/manifest-management/#downstream-processes","title":"Downstream Processes","text":"<ul> <li>Trips: Vehicle trip creation from manifest</li> <li>Fuel Requests: Automatic fuel planning</li> <li>Requested Payment: Trip expense planning</li> <li>Vehicle Status: Truck availability updates</li> </ul>"},{"location":"transactions/manifest-management/#advanced-features","title":"Advanced Features","text":""},{"location":"transactions/manifest-management/#1-cargo-addition-workflow","title":"1. Cargo Addition Workflow","text":"<pre><code>// Add cargo to existing manifest\nfrm.add_custom_button(__('Add Cargo to Manifest'), function () {\n    frappe.call({\n        method: \"vsd_fleet_ms.custom.custom_functions.add_to_manifest\",\n        args: { route_starting_point: frm.doc.route_starting_point },\n        callback: function (r) {\n            if (r.message) {\n                showCargoDialog(r.message);\n            }\n        }\n    });\n});\n</code></pre>"},{"location":"transactions/manifest-management/#2-vehicle-trip-creation","title":"2. Vehicle Trip Creation","text":"<pre><code>// Create trip from manifest\nfrm.add_custom_button(__('Vehicle Trip'), function () {\n    frappe.call({\n        method: \"vsd_fleet_ms.vsd_fleet_ms.doctype.trips.trips.create_vehicle_trip_from_manifest\",\n        args: { args_array: trip_data },\n        callback: function (r) {\n            if (r.message) {\n                frappe.set_route(\"Form\", \"Trips\", r.message.name);\n            }\n        }\n    });\n}, __(\"Create\"));\n</code></pre>"},{"location":"transactions/manifest-management/#best-practices","title":"Best Practices","text":""},{"location":"transactions/manifest-management/#efficient-manifest-planning","title":"Efficient Manifest Planning","text":"<ol> <li>Route Consolidation: Group cargo by route for efficient manifests</li> <li>Vehicle Matching: Match vehicle capacity to cargo requirements</li> <li>Driver Scheduling: Consider driver availability and qualifications</li> <li>Trailer Optimization: Use appropriate trailer types for cargo</li> </ol>"},{"location":"transactions/manifest-management/#quality-control","title":"Quality Control","text":"<ol> <li>Weight Verification: Confirm manifest weight against vehicle capacity</li> <li>Documentation Review: Ensure all required documents attached</li> <li>Route Validation: Verify route matches cargo pickup/delivery points</li> <li>Resource Availability: Double-check vehicle and driver availability</li> </ol>"},{"location":"transactions/manifest-management/#performance-optimization","title":"Performance Optimization","text":"<ol> <li>Batch Processing: Process multiple cargo items in single manifest</li> <li>Advance Planning: Create manifests ahead of scheduled trips</li> <li>Resource Allocation: Balance workload across available fleet</li> <li>Contingency Planning: Have backup vehicles/drivers identified</li> </ol>"},{"location":"transactions/manifest-management/#reporting-and-analytics","title":"Reporting and Analytics","text":""},{"location":"transactions/manifest-management/#key-metrics","title":"Key Metrics","text":"<ul> <li>Manifest utilization rates</li> <li>Vehicle capacity optimization</li> <li>Driver assignment efficiency</li> <li>Trailer usage patterns</li> <li>Route consolidation opportunities</li> </ul>"},{"location":"transactions/manifest-management/#standard-reports","title":"Standard Reports","text":"<ul> <li>Manifest summary by period</li> <li>Vehicle utilization analysis</li> <li>Driver assignment patterns</li> <li>Cargo consolidation metrics</li> </ul> <p>The Manifest doctype ensures optimal vehicle-cargo matching while maintaining flexibility for both in-house and sub-contractor operations, forming the critical link between cargo registration and trip execution.</p>"},{"location":"transactions/trip-management/","title":"Trip Management: Complete Transportation Execution","text":"<p>The Trips doctype is the operational heart of the fleet management system, managing the complete lifecycle of transportation operations from trip creation through completion, including route execution, fund management, fuel administration, and status tracking.</p>"},{"location":"transactions/trip-management/#purpose-and-scope","title":"Purpose and Scope","text":"<p>Trip Management encompasses: - Route Execution: Managing predefined route steps and progress tracking - Financial Management: Handling trip funds, expenses, and approvals - Fuel Administration: Managing fuel requests, approvals, and stock - Real-time Tracking: Location updates and progress monitoring - Status Management: Trip progression from start to completion - Exception Handling: Breakdown management and trip reassignment</p>"},{"location":"transactions/trip-management/#document-structure-and-tabs","title":"Document Structure and Tabs","text":""},{"location":"transactions/trip-management/#tab-1-trip-details","title":"Tab 1: Trip Details","text":""},{"location":"transactions/trip-management/#basic-information","title":"Basic Information","text":"Field Type Purpose Required Manifest Link Source manifest Yes Transporter Type Data In House/Sub-Contractor Auto Route Link Trip route Auto Date Date Trip start date Yes Company Link Operating company Yes"},{"location":"transactions/trip-management/#vehicle-information-in-house","title":"Vehicle Information (In House)","text":"<ul> <li>Truck Number: Assigned vehicle</li> <li>Truck License Plate: Vehicle registration</li> <li>Assigned Driver: Selected driver</li> <li>Driver Name: Driver details</li> <li>Trailers: Up to 3 trailers if configured</li> </ul>"},{"location":"transactions/trip-management/#sub-contractor-information","title":"Sub-Contractor Information","text":"<ul> <li>Sub-Contractor Name: Contractor company</li> <li>Truck License Plate: External vehicle</li> <li>Driver Name: External driver</li> <li>License Number: External license</li> </ul>"},{"location":"transactions/trip-management/#tab-2-route-steps","title":"Tab 2: Route Steps","text":"<p>Route steps are automatically populated from the Trip Routes master:</p> Field Type Purpose Editable Location Data Stop/checkpoint name No Distance Int Kilometers to this point No Fuel Consumption Float Liters for this segment No Location Type Select Loading/Offloading/Border/Town No Loading Date Date Actual pickup date Yes Offloading Date Date Actual delivery date Yes <p>Validation Rules: - Loading date must be before offloading date - Dates must be filled for Loading and Offloading points</p>"},{"location":"transactions/trip-management/#tab-3-side-trips","title":"Tab 3: Side Trips","text":"<p>For deviations from the main route:</p> Field Type Purpose Required Location Data Additional stop Yes Distance Int Extra kilometers Yes Fuel Consumption Float Additional fuel Yes Purpose Text Reason for deviation Optional <p>Impact: Side trips automatically update total distance and fuel consumption.</p>"},{"location":"transactions/trip-management/#tab-4-location-updates","title":"Tab 4: Location Updates","text":"<p>Real-time tracking capability:</p> Field Type Purpose Source Update Time Datetime Timestamp Manual/GPS Location Data Current position Manual Latitude/Longitude Float GPS coordinates GPS Status Select Current activity Manual View on Map Button Google Maps integration System"},{"location":"transactions/trip-management/#tab-5-trip-funds","title":"Tab 5: Trip Funds","text":"<p>Automatically generated from Trip Routes fixed expenses:</p> Field Type Purpose Status Expense Type Link Fixed expense category Auto Request Amount Currency Expense amount Auto Request Currency Link USD/TZS Auto Request Status Select Requested/Approved/Rejected Manual Expense Account Link GL account Auto Payable Account Link Cash/Bank account Auto Party Type Select Employee/Supplier Auto Party Dynamic Payment recipient Auto Journal Entry Link Payment voucher System <p>Fund Management Features: - Approve/Reject: Status management - Disburse Funds: Create Journal Entry - Real-time Totals: USD/TZS summary displays</p>"},{"location":"transactions/trip-management/#tab-6-fuel-management","title":"Tab 6: Fuel Management","text":"<p>Comprehensive fuel administration:</p> Field Type Purpose Required Item Code Link Fuel item Yes Item Name Data Fuel description Auto UOM Link Unit of measure Yes Quantity Float Liters required Yes Cost per Liter Currency Current fuel price Yes Total Cost Currency Calculated amount Auto Currency Link Pricing currency Yes Disbursement Type Select Cash/Credit Yes Supplier Link Fuel supplier Yes Status Select Requested/Approved/Rejected System Purchase Order Link Generated PO System <p>Fuel Workflow: 1. Request: Fill fuel requirements 2. Approval: Supervisor approves/rejects via Fuel Requests 3. Purchase: Create Purchase Order for approved fuel 4. Stock: Reduce stock via Stock Entry</p>"},{"location":"transactions/trip-management/#tab-7-trip-status","title":"Tab 7: Trip Status","text":"<p>Status tracking and completion:</p> Field Type Purpose Control Trip Status Select Pending/Completed/Breakdown System Approve Status Data Fund/fuel approval summary Auto Trip Completed Check Completion flag Manual Trip Completed Date Date Completion timestamp Auto"},{"location":"transactions/trip-management/#key-javascript-functionality","title":"Key JavaScript Functionality","text":""},{"location":"transactions/trip-management/#1-real-time-financial-summaries","title":"1. Real-time Financial Summaries","text":"<pre><code>// Dynamic fund totals calculation\nfunction approved_total() {\n    var total_request_tsh = 0;\n    var total_request_usd = 0;\n    cur_frm.doc.requested_fund_accounts_table.forEach(function (row) {\n        if (row.request_currency == 'TZS' &amp;&amp; row.request_status == \"Approved\") {\n            total_request_tsh += row.request_amount;\n        }\n        else if (row.request_currency == 'USD' &amp;&amp; row.request_status == \"Approved\") {\n            total_request_usd += row.request_amount;\n        }\n    });\n    // Update HTML display\n}\n</code></pre>"},{"location":"transactions/trip-management/#2-border-charges-calculation","title":"2. Border Charges Calculation","text":"<pre><code>// Automatic border duration calculation\ndate_of_departure_from_border: (frm) =&gt; {\n    if (frm.doc.date_of_departure_from_border &amp;&amp; frm.doc.arrival_date_at_border) {\n        var date1 = frappe.datetime.str_to_obj(cur_frm.doc.date_of_departure_from_border);\n        var date2 = frappe.datetime.str_to_obj(cur_frm.doc.arrival_date_at_border);\n        var difference_days = Math.floor((date1 - date2) / (1000 * 60 * 60 * 24));\n        frm.doc.total_days_at_the_border = difference_days;\n    }\n}\n</code></pre>"},{"location":"transactions/trip-management/#3-action-buttons","title":"3. Action Buttons","text":"<pre><code>// Trip completion\nfrm.add_custom_button(__(\"Complete Trip\"), function () {\n    frm.set_value(\"trip_completed\", 1);\n    frm.set_value(\"trip_completed_date\", frappe.datetime.nowdate());\n    // Update truck status to Idle\n}, __('Actions'));\n\n// Breakdown management\nfrm.add_custom_button(__('Create Breakdown Entry'), function() {\n    // Handle vehicle breakdown\n}, __('Actions'));\n</code></pre>"},{"location":"transactions/trip-management/#business-process-flow","title":"Business Process Flow","text":""},{"location":"transactions/trip-management/#phase-1-trip-creation","title":"Phase 1: Trip Creation","text":"<ol> <li>From Manifest: Click \"Create Vehicle Trip\"</li> <li>Auto-Population: System fills trip details from manifest</li> <li>Route Steps: Copied from Trip Routes master</li> <li>Fixed Expenses: Auto-generated as fund requests</li> <li>Fuel Allocation: Initial fuel requirements set</li> </ol>"},{"location":"transactions/trip-management/#phase-2-pre-trip-approval","title":"Phase 2: Pre-Trip Approval","text":"<ol> <li>Fund Approval: Accountant reviews requested funds</li> <li>Fuel Approval: Supervisor approves fuel requests</li> <li>Purchase Orders: Generate POs for approved fuel</li> <li>Stock Preparation: Create stock entries for fuel</li> </ol>"},{"location":"transactions/trip-management/#phase-3-trip-execution","title":"Phase 3: Trip Execution","text":"<ol> <li>Submit Trip: Lock configuration and start journey</li> <li>Status Tracking: Vehicle marked \"On Trip\"</li> <li>Location Updates: Regular position updates</li> <li>Progress Monitoring: Route step completion tracking</li> </ol>"},{"location":"transactions/trip-management/#phase-4-exception-handling","title":"Phase 4: Exception Handling","text":"<ol> <li>Breakdown Detection: System creates breakdown entry</li> <li>New Trip Creation: Generate replacement trip</li> <li>Resource Reallocation: Assign new vehicle/driver</li> <li>Continuity: Maintain cargo and route integrity</li> </ol>"},{"location":"transactions/trip-management/#phase-5-trip-completion","title":"Phase 5: Trip Completion","text":"<ol> <li>Final Updates: Complete all route steps</li> <li>Reconciliation: Verify all expenses and fuel usage</li> <li>Completion: Mark trip as completed</li> <li>Resource Release: Free vehicle and driver</li> </ol>"},{"location":"transactions/trip-management/#python-backend-functionality","title":"Python Backend Functionality","text":""},{"location":"transactions/trip-management/#1-automatic-trip-setup","title":"1. Automatic Trip Setup","text":"<pre><code>def before_insert(self):\n    self.set_route_steps()          # Copy route steps\n    if self.transporter_type == \"In House\":\n        self.set_fuel_stock()       # Set fuel allocation\n        self.set_expenses()         # Generate expense requests\n</code></pre>"},{"location":"transactions/trip-management/#2-validation-rules","title":"2. Validation Rules","text":"<pre><code>def validate_request_status(self):\n    # Ensure all requests approved/rejected before submission\n    for row in self.fuel_request_history:\n        if row.status not in [\"Rejected\", \"Approved\"]:\n            frappe.throw(\"All fuel requests must be approved or rejected\")\n        if row.status == \"Approved\" and not row.purchase_order:\n            frappe.throw(\"Approved fuel requests need Purchase Orders\")\n</code></pre>"},{"location":"transactions/trip-management/#3-integration-functions","title":"3. Integration Functions","text":"<pre><code>@frappe.whitelist()\ndef create_fund_jl(doc, row):\n    # Create Journal Entry for approved funds\n    # Handle multi-currency transactions\n    # Set accounting dimensions\n</code></pre>"},{"location":"transactions/trip-management/#approval-workflows","title":"Approval Workflows","text":""},{"location":"transactions/trip-management/#fund-approval-process","title":"Fund Approval Process","text":"<ol> <li>Requested Payment: System creates payment request document</li> <li>Review: Accountant evaluates each expense</li> <li>Decision: Approve/reject with reasons</li> <li>Journal Entry: Create payment voucher for approved funds</li> <li>Tracking: Monitor payment status</li> </ol>"},{"location":"transactions/trip-management/#fuel-approval-process","title":"Fuel Approval Process","text":"<ol> <li>Fuel Requests: System creates fuel request document</li> <li>Validation: Supervisor checks quantities and suppliers</li> <li>Approval: Approve/reject individual requests</li> <li>Procurement: Generate Purchase Orders</li> <li>Stock Management: Process stock entries</li> </ol>"},{"location":"transactions/trip-management/#status-management","title":"Status Management","text":""},{"location":"transactions/trip-management/#trip-status-progression","title":"Trip Status Progression","text":"<ul> <li>Pending: Initial state, configuration in progress</li> <li>In Progress: Trip submitted and active</li> <li>Breakdown: Vehicle breakdown occurred</li> <li>Completed: Trip finished successfully</li> </ul>"},{"location":"transactions/trip-management/#approval-status-tracking","title":"Approval Status Tracking","text":"<ul> <li>Requested: Initial state for funds/fuel</li> <li>Approved: Management approval received</li> <li>Rejected: Request denied</li> <li>Paid: Payment processed (funds only)</li> </ul>"},{"location":"transactions/trip-management/#integration-points","title":"Integration Points","text":""},{"location":"transactions/trip-management/#erpnext-integration","title":"ERPNext Integration","text":"<ul> <li>Stock Entry: Fuel stock management</li> <li>Purchase Order: Fuel procurement</li> <li>Journal Entry: Financial transactions</li> <li>Sales Invoice: Customer billing (via Cargo Registration)</li> </ul>"},{"location":"transactions/trip-management/#fleet-management-integration","title":"Fleet Management Integration","text":"<ul> <li>Truck Status: Vehicle availability updates</li> <li>Driver Assignment: Driver availability tracking</li> <li>Route Management: Route execution tracking</li> <li>Manifest Linking: Cargo-trip relationship</li> </ul>"},{"location":"transactions/trip-management/#reporting-and-analytics","title":"Reporting and Analytics","text":""},{"location":"transactions/trip-management/#standard-reports","title":"Standard Reports","text":"<ul> <li>Trip Report and Expenses: Complete trip financial analysis</li> <li>Fuel Expense By Trip: Detailed fuel consumption tracking</li> </ul>"},{"location":"transactions/trip-management/#key-performance-indicators","title":"Key Performance Indicators","text":"<ul> <li>Trip completion rate</li> <li>Fuel efficiency by route</li> <li>Average trip duration</li> <li>Cost per kilometer</li> <li>Driver performance metrics</li> <li>Vehicle utilization rates</li> </ul>"},{"location":"transactions/trip-management/#best-practices","title":"Best Practices","text":""},{"location":"transactions/trip-management/#pre-trip-planning","title":"Pre-Trip Planning","text":"<ol> <li>Complete Setup: Ensure all approvals before trip start</li> <li>Resource Verification: Confirm vehicle and driver availability</li> <li>Route Review: Validate route steps and timing</li> <li>Documentation: Verify all required documents attached</li> </ol>"},{"location":"transactions/trip-management/#during-trip-execution","title":"During Trip Execution","text":"<ol> <li>Regular Updates: Maintain location tracking</li> <li>Exception Reporting: Promptly report issues or delays</li> <li>Fuel Management: Monitor consumption vs. plan</li> <li>Communication: Keep stakeholders informed</li> </ol>"},{"location":"transactions/trip-management/#post-trip-activities","title":"Post-Trip Activities","text":"<ol> <li>Completion Verification: Confirm all deliveries made</li> <li>Financial Reconciliation: Match actual vs. planned costs</li> <li>Performance Review: Analyze efficiency metrics</li> <li>Documentation: Complete all trip records</li> </ol> <p>The Trips doctype provides comprehensive control over transportation operations, ensuring efficient execution while maintaining complete financial and operational visibility throughout the trip lifecycle.</p>"},{"location":"user-guide/complete-workflow/","title":"Complete Fleet Management Workflow Guide","text":"<p>This comprehensive guide walks you through the complete end-to-end process of using the VSD Fleet Management System, from initial setup to trip completion and invoicing.</p>"},{"location":"user-guide/complete-workflow/#prerequisites-master-data-setup","title":"Prerequisites: Master Data Setup","text":"<p>Before handling any customer transactions, ensure all master data is properly configured:</p>"},{"location":"user-guide/complete-workflow/#required-master-data","title":"Required Master Data","text":"<ul> <li>Trucks: Vehicle details, license plates, fuel warehouses</li> <li>Trailers: Trailer specifications and types  </li> <li>Truck Drivers: Driver profiles with documents and employee links</li> <li>Fuel UOM: Fuel measurement units (Liters, Gallons)</li> <li>Trip Locations: All pickup and delivery locations</li> <li>Trip Location Types: Loading Point, Offloading Point, Border Point, etc.</li> <li>Cargo Types: Categories of cargo your fleet handles</li> <li>Trip Routes: Predefined routes with steps, distances, and fuel consumption</li> <li>Trip Fixed Expenses: Standard costs per route (tolls, permits, driver allowances)</li> <li>Transport Settings: System-wide configurations and accounting dimensions</li> </ul>"},{"location":"user-guide/complete-workflow/#critical-configuration-transport-settings","title":"Critical Configuration: Transport Settings","text":"<p>The Transport Settings doctype is essential for system operation: - Fuel Item: Default fuel item for stock management - Vehicle Fuel Parent Warehouse: Main fuel storage location - Accounting Dimensions: Map transactions to cost centers and dimensions - Account Groups: Define expense and cash account categories</p>"},{"location":"user-guide/complete-workflow/#customer-service-workflow","title":"Customer Service Workflow","text":""},{"location":"user-guide/complete-workflow/#phase-1-cargo-registration","title":"Phase 1: Cargo Registration","text":"<p>When a customer requests transportation services:</p>"},{"location":"user-guide/complete-workflow/#11-create-cargo-registration","title":"1.1 Create Cargo Registration","text":"<ol> <li>Navigate to Transactions \u2192 Cargo Registration</li> <li>Click New</li> <li>Enter:</li> <li>Customer: Select from Customer master</li> <li>Transport Type: Cross Border or Internal</li> <li>Posting Date: Auto-filled, read-only</li> </ol>"},{"location":"user-guide/complete-workflow/#12-add-cargo-details","title":"1.2 Add Cargo Details","text":"<p>In the Cargo Details child table, add each cargo item:</p> <p>Critical Planning Note: Each row should represent one vehicle's capacity. If you have cargo requiring multiple vehicles, create separate rows for each vehicle.</p> <p>For each cargo row, specify: - Container Size: Loose, 20 FT, or 40 FT - Container Number: Required for containerized cargo - BL Number: Bill of Lading reference - Seal Number: For sealed containers - Net Weight (kg): Automatically converts to tonnes - Number of Packages: Count of items - Cargo Route: Link to predefined Trip Routes - Loading/Offloading Dates: Expected dates - Location Details:    - Cargo Location Country/City (pickup)   - Cargo Destination Country/City (delivery) - Service Charges:   - Service Item: Transportation service item   - Currency: Billing currency   - Rate: Price per unit</p>"},{"location":"user-guide/complete-workflow/#13-create-customer-invoice","title":"1.3 Create Customer Invoice","text":"<p>Before proceeding to manifest creation: 1. Select specific cargo rows using checkboxes 2. Click Create Invoice button 3. System generates Sales Invoice with:    - Vehicle details (when assigned)    - Route information    - Service charges    - Automatic weight-based billing (if enabled)</p> <p>Important: Create invoice before submitting Cargo Registration.</p>"},{"location":"user-guide/complete-workflow/#phase-2-vehicle-assignment-via-manifest","title":"Phase 2: Vehicle Assignment via Manifest","text":""},{"location":"user-guide/complete-workflow/#21-assign-cargo-to-manifest","title":"2.1 Assign Cargo to Manifest","text":"<p>From any cargo detail row: 1. Click Assign Manifest button 2. System opens dialog showing:    - Existing manifests for the same route    - Available manifests with truck and driver details 3. Choose between:    - Assign to Existing Manifest: Add to current manifest    - Create New Manifest: Start fresh manifest</p>"},{"location":"user-guide/complete-workflow/#22-configure-manifest-details","title":"2.2 Configure Manifest Details","text":"<p>In the Manifest form: - Transporter Type: In House or Sub-Contractor - Trip Route: Inherited from cargo - Posting Date: Auto-filled</p> <p>For In House Operations: - Truck: Select available idle truck - Assigned Driver: Choose active, available driver - Has Trailers: Check if trailers needed - Trailer Selection: Up to 3 trailers supported</p> <p>For Sub-Contractor Operations: - Sub-Contractor Name: Name of contractor - Truck License Plate: External truck details - Driver Name: Sub-contractor's driver - License Number: External driver's license</p>"},{"location":"user-guide/complete-workflow/#23-cargo-allocation","title":"2.3 Cargo Allocation","text":"<p>In the Manifest Cargo Details section: - Cargo Allocation: Choose Truck or Trailers - Specific Allocation: Select exact truck/trailer - System calculates Manifest Total Weight</p>"},{"location":"user-guide/complete-workflow/#24-submit-manifest","title":"2.4 Submit Manifest","text":"<p>After configuration, submit the manifest to lock vehicle assignment.</p>"},{"location":"user-guide/complete-workflow/#phase-3-trip-creation-and-management","title":"Phase 3: Trip Creation and Management","text":""},{"location":"user-guide/complete-workflow/#31-create-vehicle-trip","title":"3.1 Create Vehicle Trip","text":"<p>After manifest submission: 1. Click Create Vehicle Trip button 2. System automatically creates trip with:    - Route steps from Trip Routes master    - Fixed expenses from route configuration    - Automatic fuel allocation based on route    - Truck assignment and status update</p>"},{"location":"user-guide/complete-workflow/#32-trip-tabs-overview","title":"3.2 Trip Tabs Overview","text":""},{"location":"user-guide/complete-workflow/#tab-1-trip-details","title":"Tab 1: Trip Details","text":"<ul> <li>Basic Information: Manifest, route, dates</li> <li>Vehicle Details: Truck/trailer assignments</li> <li>Driver Information: In-house or sub-contractor details</li> <li>Summary: Total distance and fuel consumption</li> </ul>"},{"location":"user-guide/complete-workflow/#tab-2-route-steps","title":"Tab 2: Route Steps","text":"<p>Pre-populated from Trip Routes master: - Location: Each stop along the route - Distance: Kilometers between stops - Fuel Consumption: Liters per segment - Location Type: Loading, offloading, border points - Dates: Fill actual loading/offloading dates</p>"},{"location":"user-guide/complete-workflow/#tab-3-side-trips","title":"Tab 3: Side Trips","text":"<p>For deviations from main route: - Additional stops not in main route - Extra fuel consumption - Additional distance - System recalculates totals automatically</p>"},{"location":"user-guide/complete-workflow/#tab-4-location-updates","title":"Tab 4: Location Updates","text":"<p>Real-time tracking: - Manual Updates: Driver location input - GPS Integration: Automatic location tracking - View on Map: Google Maps integration</p>"},{"location":"user-guide/complete-workflow/#tab-5-trip-funds","title":"Tab 5: Trip Funds","text":"<p>Automatic Generation: Based on Trip Routes fixed expenses - Expense Type: Tolls, permits, allowances - Amount: Predefined amounts per route - Currency: USD or TZS - Status: Requested \u2192 Approved \u2192 Paid - Accounts: Expense and payable accounts</p> <p>Fund Approval Process: 1. System creates Requested Payment document 2. Accountant reviews and approves/rejects 3. Approved funds show \"Approved\" status 4. Disburse Funds button creates Journal Entry</p>"},{"location":"user-guide/complete-workflow/#tab-6-fuel-management","title":"Tab 6: Fuel Management","text":"<p>Fuel Request Process: 1. Fill fuel requirements:    - Item Code: Fuel item from settings    - Quantity: Liters needed    - Disbursement Type: Cash/Credit    - Supplier: Fuel supplier    - Cost per Liter: Current fuel price 2. Status: Requested \u2192 Approved \u2192 Ordered</p> <p>Fuel Approval Workflow: - Requests appear in Fuel Requests doctype - Supervisor approves/rejects requests - Create Purchase Order: Generate PO for approved fuel - Reduce Stock: Create stock entry for fuel consumption</p>"},{"location":"user-guide/complete-workflow/#tab-7-trip-status","title":"Tab 7: Trip Status","text":"<ul> <li>Trip Status: Pending \u2192 Completed \u2192 Breakdown</li> <li>Approval Status: Fund and fuel approval summary</li> <li>Trip Completion: Mark as completed when finished</li> </ul>"},{"location":"user-guide/complete-workflow/#phase-4-approval-workflows","title":"Phase 4: Approval Workflows","text":""},{"location":"user-guide/complete-workflow/#41-fund-approval-process","title":"4.1 Fund Approval Process","text":"<ol> <li>Requested Payment document created automatically</li> <li>Accountant receives notification</li> <li>Review each fund request:</li> <li>Approve: Funds available for disbursement</li> <li>Reject: Request denied with reason</li> <li>Approved funds enable Journal Entry creation</li> <li>Payment tracking through Journal Entries</li> </ol>"},{"location":"user-guide/complete-workflow/#42-fuel-approval-process","title":"4.2 Fuel Approval Process","text":"<ol> <li>Fuel Requests document tracks all requests</li> <li>Fuel supervisor reviews:</li> <li>Verify quantities against route requirements</li> <li>Check supplier rates</li> <li>Approve/reject individual requests</li> <li>Approved requests enable:</li> <li>Purchase Order creation</li> <li>Stock entry processing</li> <li>Supplier payment processing</li> </ol>"},{"location":"user-guide/complete-workflow/#phase-5-trip-execution","title":"Phase 5: Trip Execution","text":""},{"location":"user-guide/complete-workflow/#51-pre-trip-requirements","title":"5.1 Pre-Trip Requirements","text":"<p>Before trip submission, ensure: - All fund requests approved/rejected - All fuel requests approved/rejected - Approved fuel requests have Purchase Orders - Approved fund requests have Journal Entries - Stock out entry created for fuel</p>"},{"location":"user-guide/complete-workflow/#52-trip-submission","title":"5.2 Trip Submission","text":"<p>Submit trip to start journey: - Truck status changes to \"On Trip\" - Driver marked as \"In Trip\" - Trip becomes read-only for modifications</p>"},{"location":"user-guide/complete-workflow/#53-trip-operations","title":"5.3 Trip Operations","text":"<p>Available actions during trip: - Complete Trip: Mark as finished - Create Breakdown: Handle vehicle breakdowns - Location Updates: Track progress - Return Trip: For round trips</p>"},{"location":"user-guide/complete-workflow/#54-breakdown-management","title":"5.4 Breakdown Management","text":"<p>If breakdown occurs: 1. Click Create Breakdown Entry 2. Fill breakdown details:    - Date and time    - Location    - Description of issue 3. System creates Allocate New Vehicle Trip option 4. New trip inherits cargo and route details 5. Original trip marked as \"Re-Assigned\"</p>"},{"location":"user-guide/complete-workflow/#phase-6-trip-completion","title":"Phase 6: Trip Completion","text":""},{"location":"user-guide/complete-workflow/#61-complete-trip-process","title":"6.1 Complete Trip Process","text":"<ol> <li>Update final locations and dates</li> <li>Complete all fuel transactions</li> <li>Click Complete Trip button</li> <li>System updates:</li> <li>Truck status to \"Idle\"</li> <li>Driver availability</li> <li>Trip completion date</li> </ol>"},{"location":"user-guide/complete-workflow/#62-financial-reconciliation","title":"6.2 Financial Reconciliation","text":"<ul> <li>Review all Journal Entries</li> <li>Confirm Purchase Orders received</li> <li>Update stock entries</li> <li>Generate expense reports</li> </ul>"},{"location":"user-guide/complete-workflow/#reporting-and-analytics","title":"Reporting and Analytics","text":""},{"location":"user-guide/complete-workflow/#standard-reports","title":"Standard Reports","text":"<ol> <li>Trip Report and Expenses: Complete trip overview with costs</li> <li>Fuel Expense By Trip: Detailed fuel consumption analysis</li> </ol>"},{"location":"user-guide/complete-workflow/#key-metrics","title":"Key Metrics","text":"<ul> <li>Trip profitability per route</li> <li>Fuel efficiency tracking</li> <li>Vehicle utilization rates</li> <li>Driver performance metrics</li> <li>Customer service levels</li> </ul>"},{"location":"user-guide/complete-workflow/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/complete-workflow/#data-management","title":"Data Management","text":"<ul> <li>Register cargo by vehicle capacity for accurate manifests</li> <li>Maintain updated master data for smooth operations</li> <li>Regular reconciliation of fuel and expense accounts</li> </ul>"},{"location":"user-guide/complete-workflow/#workflow-efficiency","title":"Workflow Efficiency","text":"<ul> <li>Pre-approve standard route expenses</li> <li>Maintain fuel supplier agreements</li> <li>Regular vehicle inspections</li> <li>Driver training on system usage</li> </ul>"},{"location":"user-guide/complete-workflow/#compliance","title":"Compliance","text":"<ul> <li>Ensure all required documents attached</li> <li>Regular backup of transaction data</li> <li>Audit trail maintenance</li> <li>Regulatory reporting preparation</li> </ul> <p>This workflow ensures complete traceability from customer cargo registration through trip completion and financial settlement, providing comprehensive fleet management capabilities for both internal and sub-contractor operations.</p>"}]}